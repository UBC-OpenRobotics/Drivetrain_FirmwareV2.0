ARM GAS  /tmp/cci2yK0P.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZL12MX_GPIO_Initv,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	_ZL12MX_GPIO_Initv:
  25              		.fnstart
  26              	.LFB1039:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.cpp ****   * in the root directory of this software component.
  14:Core/Src/main.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.cpp ****   *
  16:Core/Src/main.cpp ****   ******************************************************************************
  17:Core/Src/main.cpp ****   */
  18:Core/Src/main.cpp **** /* USER CODE END Header */
  19:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.cpp **** #include "main.h"
  21:Core/Src/main.cpp **** #include "cmsis_os.h"
  22:Core/Src/main.cpp **** 
  23:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.cpp **** #include "LED.h"
  26:Core/Src/main.cpp **** #include "motorControl.h"
  27:Core/Src/main.cpp **** /* USER CODE END Includes */
  28:Core/Src/main.cpp **** 
  29:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.cpp **** 
ARM GAS  /tmp/cci2yK0P.s 			page 2


  32:Core/Src/main.cpp **** /* USER CODE END PTD */
  33:Core/Src/main.cpp **** 
  34:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  36:Core/Src/main.cpp **** 
  37:Core/Src/main.cpp **** /* USER CODE END PD */
  38:Core/Src/main.cpp **** 
  39:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  41:Core/Src/main.cpp **** 
  42:Core/Src/main.cpp **** /* USER CODE END PM */
  43:Core/Src/main.cpp **** 
  44:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.cpp **** 
  46:Core/Src/main.cpp **** TIM_HandleTypeDef htim2;
  47:Core/Src/main.cpp **** 
  48:Core/Src/main.cpp **** /* Definitions for defaultTask */
  49:Core/Src/main.cpp **** osThreadId_t defaultTaskHandle;
  50:Core/Src/main.cpp **** const osThreadAttr_t defaultTask_attributes = {
  51:Core/Src/main.cpp ****   .name = "defaultTask",
  52:Core/Src/main.cpp ****   .stack_size = 128 * 4,
  53:Core/Src/main.cpp ****   .priority = (osPriority_t) osPriorityNormal,
  54:Core/Src/main.cpp **** };
  55:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  56:Core/Src/main.cpp **** 
  57:Core/Src/main.cpp **** /* USER CODE END PV */
  58:Core/Src/main.cpp **** 
  59:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.cpp **** void SystemClock_Config(void);
  61:Core/Src/main.cpp **** static void MX_GPIO_Init(void);
  62:Core/Src/main.cpp **** static void MX_TIM2_Init(void);
  63:Core/Src/main.cpp **** void StartDefaultTask(void *argument);
  64:Core/Src/main.cpp **** 
  65:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.cpp **** 
  67:Core/Src/main.cpp **** /* USER CODE END PFP */
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.cpp **** 
  72:Core/Src/main.cpp **** /* USER CODE END 0 */
  73:Core/Src/main.cpp **** 
  74:Core/Src/main.cpp **** /**
  75:Core/Src/main.cpp ****   * @brief  The application entry point.
  76:Core/Src/main.cpp ****   * @retval int
  77:Core/Src/main.cpp ****   */
  78:Core/Src/main.cpp **** int main(void)
  79:Core/Src/main.cpp **** {
  80:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.cpp **** 
  82:Core/Src/main.cpp ****   /* LED objects */
  83:Core/Src/main.cpp ****   STM32LED::LED1= new STM32LED::LED(GPIOB, GPIO_PIN_0);
  84:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
  85:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
  86:Core/Src/main.cpp **** 
  87:Core/Src/main.cpp ****   /* motorControl object(s) */
  88:Core/Src/main.cpp ****   STM32_motor_control::motor_controller_1 = new STM32_motor_control::stepper_motor_controller(GPIOA
ARM GAS  /tmp/cci2yK0P.s 			page 3


  89:Core/Src/main.cpp **** 
  90:Core/Src/main.cpp ****   /* USER CODE END 1 */
  91:Core/Src/main.cpp **** 
  92:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  93:Core/Src/main.cpp **** 
  94:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  95:Core/Src/main.cpp ****   HAL_Init();
  96:Core/Src/main.cpp **** 
  97:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  98:Core/Src/main.cpp **** 
  99:Core/Src/main.cpp ****   /* USER CODE END Init */
 100:Core/Src/main.cpp **** 
 101:Core/Src/main.cpp ****   /* Configure the system clock */
 102:Core/Src/main.cpp ****   SystemClock_Config();
 103:Core/Src/main.cpp **** 
 104:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
 105:Core/Src/main.cpp **** 
 106:Core/Src/main.cpp ****   /* USER CODE END SysInit */
 107:Core/Src/main.cpp **** 
 108:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
 109:Core/Src/main.cpp ****   MX_GPIO_Init();
 110:Core/Src/main.cpp ****   MX_TIM2_Init();
 111:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 112:Core/Src/main.cpp ****   HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 113:Core/Src/main.cpp ****   /* USER CODE END 2 */
 114:Core/Src/main.cpp **** 
 115:Core/Src/main.cpp ****   /* Init scheduler */
 116:Core/Src/main.cpp ****   osKernelInitialize();
 117:Core/Src/main.cpp **** 
 118:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_MUTEX */
 119:Core/Src/main.cpp ****   /* add mutexes, ... */
 120:Core/Src/main.cpp ****   /* USER CODE END RTOS_MUTEX */
 121:Core/Src/main.cpp **** 
 122:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 123:Core/Src/main.cpp ****   /* add semaphores, ... */
 124:Core/Src/main.cpp ****   /* USER CODE END RTOS_SEMAPHORES */
 125:Core/Src/main.cpp **** 
 126:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_TIMERS */
 127:Core/Src/main.cpp ****   /* start timers, add new ones, ... */
 128:Core/Src/main.cpp ****   /* USER CODE END RTOS_TIMERS */
 129:Core/Src/main.cpp **** 
 130:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_QUEUES */
 131:Core/Src/main.cpp ****   /* add queues, ... */
 132:Core/Src/main.cpp ****   /* USER CODE END RTOS_QUEUES */
 133:Core/Src/main.cpp **** 
 134:Core/Src/main.cpp ****   /* Create the thread(s) */
 135:Core/Src/main.cpp ****   /* creation of defaultTask */
 136:Core/Src/main.cpp ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 137:Core/Src/main.cpp **** 
 138:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_THREADS */
 139:Core/Src/main.cpp ****   /* add threads, ... */
 140:Core/Src/main.cpp ****   /* USER CODE END RTOS_THREADS */
 141:Core/Src/main.cpp **** 
 142:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_EVENTS */
 143:Core/Src/main.cpp ****   /* add events, ... */
 144:Core/Src/main.cpp **** 
 145:Core/Src/main.cpp ****   /* USER CODE END RTOS_EVENTS */
ARM GAS  /tmp/cci2yK0P.s 			page 4


 146:Core/Src/main.cpp **** 
 147:Core/Src/main.cpp ****   /* Start scheduler */
 148:Core/Src/main.cpp ****   osKernelStart();
 149:Core/Src/main.cpp ****   /* We should never get here as control is now taken by the scheduler */
 150:Core/Src/main.cpp ****   /* Infinite loop */
 151:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 152:Core/Src/main.cpp ****   while (1)
 153:Core/Src/main.cpp ****   {
 154:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 155:Core/Src/main.cpp **** 
 156:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 157:Core/Src/main.cpp ****   }
 158:Core/Src/main.cpp ****   /* USER CODE END 3 */
 159:Core/Src/main.cpp **** }
 160:Core/Src/main.cpp **** 
 161:Core/Src/main.cpp **** /**
 162:Core/Src/main.cpp ****   * @brief System Clock Configuration
 163:Core/Src/main.cpp ****   * @retval None
 164:Core/Src/main.cpp ****   */
 165:Core/Src/main.cpp **** void SystemClock_Config(void)
 166:Core/Src/main.cpp **** {
 167:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 168:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 169:Core/Src/main.cpp **** 
 170:Core/Src/main.cpp ****   /** Supply configuration update enable
 171:Core/Src/main.cpp ****   */
 172:Core/Src/main.cpp ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 173:Core/Src/main.cpp **** 
 174:Core/Src/main.cpp ****   /** Configure the main internal regulator output voltage
 175:Core/Src/main.cpp ****   */
 176:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 177:Core/Src/main.cpp **** 
 178:Core/Src/main.cpp ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 179:Core/Src/main.cpp **** 
 180:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.cpp ****   */
 183:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 184:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 185:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 186:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 187:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 188:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 32;
 189:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 200;
 190:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = 1;
 191:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 192:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = 2;
 193:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
 194:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 195:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 196:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 197:Core/Src/main.cpp ****   {
 198:Core/Src/main.cpp ****     Error_Handler();
 199:Core/Src/main.cpp ****   }
 200:Core/Src/main.cpp **** 
 201:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 202:Core/Src/main.cpp ****   */
ARM GAS  /tmp/cci2yK0P.s 			page 5


 203:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 204:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 205:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 206:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 207:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 208:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 209:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 210:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 211:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 212:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 213:Core/Src/main.cpp **** 
 214:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 215:Core/Src/main.cpp ****   {
 216:Core/Src/main.cpp ****     Error_Handler();
 217:Core/Src/main.cpp ****   }
 218:Core/Src/main.cpp **** }
 219:Core/Src/main.cpp **** 
 220:Core/Src/main.cpp **** /**
 221:Core/Src/main.cpp ****   * @brief TIM2 Initialization Function
 222:Core/Src/main.cpp ****   * @param None
 223:Core/Src/main.cpp ****   * @retval None
 224:Core/Src/main.cpp ****   */
 225:Core/Src/main.cpp **** static void MX_TIM2_Init(void)
 226:Core/Src/main.cpp **** {
 227:Core/Src/main.cpp **** 
 228:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM2_Init 0 */
 229:Core/Src/main.cpp **** 
 230:Core/Src/main.cpp ****   /* USER CODE END TIM2_Init 0 */
 231:Core/Src/main.cpp **** 
 232:Core/Src/main.cpp ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 233:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 234:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 235:Core/Src/main.cpp **** 
 236:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM2_Init 1 */
 237:Core/Src/main.cpp **** 
 238:Core/Src/main.cpp ****   /* USER CODE END TIM2_Init 1 */
 239:Core/Src/main.cpp ****   htim2.Instance = TIM2;
 240:Core/Src/main.cpp ****   htim2.Init.Prescaler = 99;
 241:Core/Src/main.cpp ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 242:Core/Src/main.cpp ****   htim2.Init.Period = 1000;
 243:Core/Src/main.cpp ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 244:Core/Src/main.cpp ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 245:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 246:Core/Src/main.cpp ****   {
 247:Core/Src/main.cpp ****     Error_Handler();
 248:Core/Src/main.cpp ****   }
 249:Core/Src/main.cpp ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 250:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 251:Core/Src/main.cpp ****   {
 252:Core/Src/main.cpp ****     Error_Handler();
 253:Core/Src/main.cpp ****   }
 254:Core/Src/main.cpp ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 255:Core/Src/main.cpp ****   {
 256:Core/Src/main.cpp ****     Error_Handler();
 257:Core/Src/main.cpp ****   }
 258:Core/Src/main.cpp ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 259:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/cci2yK0P.s 			page 6


 260:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 261:Core/Src/main.cpp ****   {
 262:Core/Src/main.cpp ****     Error_Handler();
 263:Core/Src/main.cpp ****   }
 264:Core/Src/main.cpp ****   sConfigOC.OCMode = TIM_OCMODE_TOGGLE;
 265:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 266:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 267:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 268:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 269:Core/Src/main.cpp ****   {
 270:Core/Src/main.cpp ****     Error_Handler();
 271:Core/Src/main.cpp ****   }
 272:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM2_Init 2 */
 273:Core/Src/main.cpp **** 
 274:Core/Src/main.cpp ****   /* USER CODE END TIM2_Init 2 */
 275:Core/Src/main.cpp ****   HAL_TIM_MspPostInit(&htim2);
 276:Core/Src/main.cpp **** 
 277:Core/Src/main.cpp **** }
 278:Core/Src/main.cpp **** 
 279:Core/Src/main.cpp **** /**
 280:Core/Src/main.cpp ****   * @brief GPIO Initialization Function
 281:Core/Src/main.cpp ****   * @param None
 282:Core/Src/main.cpp ****   * @retval None
 283:Core/Src/main.cpp ****   */
 284:Core/Src/main.cpp **** static void MX_GPIO_Init(void)
 285:Core/Src/main.cpp **** {
  28              		.loc 1 285 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.save {r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41              		.pad #44
  42 0002 8BB0     		sub	sp, sp, #44
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 64
 286:Core/Src/main.cpp ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 286 3 view .LVU1
  46              		.loc 1 286 20 is_stmt 0 view .LVU2
  47 0004 0024     		movs	r4, #0
  48 0006 0594     		str	r4, [sp, #20]
  49 0008 0694     		str	r4, [sp, #24]
  50 000a 0794     		str	r4, [sp, #28]
  51 000c 0894     		str	r4, [sp, #32]
  52 000e 0994     		str	r4, [sp, #36]
 287:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 288:Core/Src/main.cpp **** /* USER CODE END MX_GPIO_Init_1 */
 289:Core/Src/main.cpp **** 
 290:Core/Src/main.cpp ****   /* GPIO Ports Clock Enable */
 291:Core/Src/main.cpp ****   __HAL_RCC_GPIOC_CLK_ENABLE();
ARM GAS  /tmp/cci2yK0P.s 			page 7


  53              		.loc 1 291 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 291 3 view .LVU4
  56              		.loc 1 291 3 view .LVU5
  57 0010 2F4B     		ldr	r3, .L3
  58 0012 D3F8E020 		ldr	r2, [r3, #224]
  59 0016 42F00402 		orr	r2, r2, #4
  60 001a C3F8E020 		str	r2, [r3, #224]
  61              		.loc 1 291 3 view .LVU6
  62 001e D3F8E020 		ldr	r2, [r3, #224]
  63 0022 02F00402 		and	r2, r2, #4
  64 0026 0092     		str	r2, [sp]
  65              		.loc 1 291 3 view .LVU7
  66 0028 009A     		ldr	r2, [sp]
  67              	.LBE4:
 292:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  68              		.loc 1 292 3 view .LVU8
  69              	.LBB5:
  70              		.loc 1 292 3 view .LVU9
  71              		.loc 1 292 3 view .LVU10
  72 002a D3F8E020 		ldr	r2, [r3, #224]
  73 002e 42F08002 		orr	r2, r2, #128
  74 0032 C3F8E020 		str	r2, [r3, #224]
  75              		.loc 1 292 3 view .LVU11
  76 0036 D3F8E020 		ldr	r2, [r3, #224]
  77 003a 02F08002 		and	r2, r2, #128
  78 003e 0192     		str	r2, [sp, #4]
  79              		.loc 1 292 3 view .LVU12
  80 0040 019A     		ldr	r2, [sp, #4]
  81              	.LBE5:
 293:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 293 3 view .LVU13
  83              	.LBB6:
  84              		.loc 1 293 3 view .LVU14
  85              		.loc 1 293 3 view .LVU15
  86 0042 D3F8E020 		ldr	r2, [r3, #224]
  87 0046 42F00102 		orr	r2, r2, #1
  88 004a C3F8E020 		str	r2, [r3, #224]
  89              		.loc 1 293 3 view .LVU16
  90 004e D3F8E020 		ldr	r2, [r3, #224]
  91 0052 02F00102 		and	r2, r2, #1
  92 0056 0292     		str	r2, [sp, #8]
  93              		.loc 1 293 3 view .LVU17
  94 0058 029A     		ldr	r2, [sp, #8]
  95              	.LBE6:
 294:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  96              		.loc 1 294 3 view .LVU18
  97              	.LBB7:
  98              		.loc 1 294 3 view .LVU19
  99              		.loc 1 294 3 view .LVU20
 100 005a D3F8E020 		ldr	r2, [r3, #224]
 101 005e 42F00202 		orr	r2, r2, #2
 102 0062 C3F8E020 		str	r2, [r3, #224]
 103              		.loc 1 294 3 view .LVU21
 104 0066 D3F8E020 		ldr	r2, [r3, #224]
 105 006a 02F00202 		and	r2, r2, #2
 106 006e 0392     		str	r2, [sp, #12]
ARM GAS  /tmp/cci2yK0P.s 			page 8


 107              		.loc 1 294 3 view .LVU22
 108 0070 039A     		ldr	r2, [sp, #12]
 109              	.LBE7:
 295:Core/Src/main.cpp ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 110              		.loc 1 295 3 view .LVU23
 111              	.LBB8:
 112              		.loc 1 295 3 view .LVU24
 113              		.loc 1 295 3 view .LVU25
 114 0072 D3F8E020 		ldr	r2, [r3, #224]
 115 0076 42F01002 		orr	r2, r2, #16
 116 007a C3F8E020 		str	r2, [r3, #224]
 117              		.loc 1 295 3 view .LVU26
 118 007e D3F8E030 		ldr	r3, [r3, #224]
 119 0082 03F01003 		and	r3, r3, #16
 120 0086 0493     		str	r3, [sp, #16]
 121              		.loc 1 295 3 view .LVU27
 122 0088 049B     		ldr	r3, [sp, #16]
 123              	.LBE8:
 296:Core/Src/main.cpp **** 
 297:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 298:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOB, LED1_Pin|LED3_Pin, GPIO_PIN_RESET);
 124              		.loc 1 298 3 view .LVU28
 125              		.loc 1 298 20 is_stmt 0 view .LVU29
 126 008a 124F     		ldr	r7, .L3+4
 127 008c 2246     		mov	r2, r4
 128 008e 44F20101 		movw	r1, #16385
 129 0092 3846     		mov	r0, r7
 130 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL0:
 299:Core/Src/main.cpp **** 
 300:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 301:Core/Src/main.cpp ****   HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 132              		.loc 1 301 3 is_stmt 1 view .LVU30
 133              		.loc 1 301 20 is_stmt 0 view .LVU31
 134 0098 0F4D     		ldr	r5, .L3+8
 135 009a 2246     		mov	r2, r4
 136 009c 0221     		movs	r1, #2
 137 009e 2846     		mov	r0, r5
 138 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 139              	.LVL1:
 302:Core/Src/main.cpp **** 
 303:Core/Src/main.cpp ****   /*Configure GPIO pins : LED1_Pin LED3_Pin */
 304:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = LED1_Pin|LED3_Pin;
 140              		.loc 1 304 3 is_stmt 1 view .LVU32
 141              		.loc 1 304 23 is_stmt 0 view .LVU33
 142 00a4 44F20103 		movw	r3, #16385
 143 00a8 0593     		str	r3, [sp, #20]
 305:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 144              		.loc 1 305 3 is_stmt 1 view .LVU34
 145              		.loc 1 305 24 is_stmt 0 view .LVU35
 146 00aa 0126     		movs	r6, #1
 147 00ac 0696     		str	r6, [sp, #24]
 306:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 148              		.loc 1 306 3 is_stmt 1 view .LVU36
 149              		.loc 1 306 24 is_stmt 0 view .LVU37
 150 00ae 0794     		str	r4, [sp, #28]
 307:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/cci2yK0P.s 			page 9


 151              		.loc 1 307 3 is_stmt 1 view .LVU38
 152              		.loc 1 307 25 is_stmt 0 view .LVU39
 153 00b0 0894     		str	r4, [sp, #32]
 308:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 154              		.loc 1 308 3 is_stmt 1 view .LVU40
 155              		.loc 1 308 16 is_stmt 0 view .LVU41
 156 00b2 05A9     		add	r1, sp, #20
 157 00b4 3846     		mov	r0, r7
 158 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL2:
 309:Core/Src/main.cpp **** 
 310:Core/Src/main.cpp ****   /*Configure GPIO pin : LED2_Pin */
 311:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = LED2_Pin;
 160              		.loc 1 311 3 is_stmt 1 view .LVU42
 161              		.loc 1 311 23 is_stmt 0 view .LVU43
 162 00ba 0223     		movs	r3, #2
 163 00bc 0593     		str	r3, [sp, #20]
 312:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 312 3 is_stmt 1 view .LVU44
 165              		.loc 1 312 24 is_stmt 0 view .LVU45
 166 00be 0696     		str	r6, [sp, #24]
 313:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 167              		.loc 1 313 3 is_stmt 1 view .LVU46
 168              		.loc 1 313 24 is_stmt 0 view .LVU47
 169 00c0 0794     		str	r4, [sp, #28]
 314:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 170              		.loc 1 314 3 is_stmt 1 view .LVU48
 171              		.loc 1 314 25 is_stmt 0 view .LVU49
 172 00c2 0894     		str	r4, [sp, #32]
 315:Core/Src/main.cpp ****   HAL_GPIO_Init(LED2_GPIO_Port, &GPIO_InitStruct);
 173              		.loc 1 315 3 is_stmt 1 view .LVU50
 174              		.loc 1 315 16 is_stmt 0 view .LVU51
 175 00c4 05A9     		add	r1, sp, #20
 176 00c6 2846     		mov	r0, r5
 177 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL3:
 316:Core/Src/main.cpp **** 
 317:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 318:Core/Src/main.cpp **** /* USER CODE END MX_GPIO_Init_2 */
 319:Core/Src/main.cpp **** }
 179              		.loc 1 319 1 view .LVU52
 180 00cc 0BB0     		add	sp, sp, #44
 181              	.LCFI2:
 182              		.cfi_def_cfa_offset 20
 183              		@ sp needed
 184 00ce F0BD     		pop	{r4, r5, r6, r7, pc}
 185              	.L4:
 186              		.align	2
 187              	.L3:
 188 00d0 00440258 		.word	1476543488
 189 00d4 00040258 		.word	1476527104
 190 00d8 00100258 		.word	1476530176
 191              		.cfi_endproc
 192              	.LFE1039:
 193              		.fnend
 195              		.section	.text._Z16StartDefaultTaskPv,"ax",%progbits
 196              		.align	1
ARM GAS  /tmp/cci2yK0P.s 			page 10


 197              		.global	_Z16StartDefaultTaskPv
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv5-d16
 203              	_Z16StartDefaultTaskPv:
 204              		.fnstart
 205              	.LVL4:
 206              	.LFB1040:
 320:Core/Src/main.cpp **** 
 321:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 322:Core/Src/main.cpp **** 
 323:Core/Src/main.cpp **** /* USER CODE END 4 */
 324:Core/Src/main.cpp **** 
 325:Core/Src/main.cpp **** /* USER CODE BEGIN Header_StartDefaultTask */
 326:Core/Src/main.cpp **** /**
 327:Core/Src/main.cpp ****   * @brief  Function implementing the defaultTask thread.
 328:Core/Src/main.cpp ****   * @param  argument: Not used
 329:Core/Src/main.cpp ****   * @retval None
 330:Core/Src/main.cpp ****   */
 331:Core/Src/main.cpp **** /* USER CODE END Header_StartDefaultTask */
 332:Core/Src/main.cpp **** void StartDefaultTask(void *argument)
 333:Core/Src/main.cpp **** {
 207              		.loc 1 333 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		.loc 1 333 1 is_stmt 0 view .LVU54
 212 0000 10B5     		push	{r4, lr}
 213              		.save {r4, lr}
 214              	.LCFI3:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 334:Core/Src/main.cpp ****   /* USER CODE BEGIN 5 */
 335:Core/Src/main.cpp ****   /* Infinite loop */    
 336:Core/Src/main.cpp ****   uint32_t motor_rpm = 100;
 218              		.loc 1 336 3 is_stmt 1 view .LVU55
 219              	.LVL5:
 337:Core/Src/main.cpp ****   STM32_motor_control::motor_controller_1 -> set_stepper_rpm(motor_rpm);
 220              		.loc 1 337 3 view .LVU56
 221              		.loc 1 337 61 is_stmt 0 view .LVU57
 222 0002 6421     		movs	r1, #100
 223 0004 0B4B     		ldr	r3, .L9
 224 0006 1868     		ldr	r0, [r3]
 225              	.LVL6:
 226              		.loc 1 337 61 view .LVU58
 227 0008 FFF7FEFF 		bl	_ZN19STM32_motor_control24stepper_motor_controller15set_stepper_rpmEm
 228              	.LVL7:
 336:Core/Src/main.cpp ****   STM32_motor_control::motor_controller_1 -> set_stepper_rpm(motor_rpm);
 229              		.loc 1 336 12 view .LVU59
 230 000c 6424     		movs	r4, #100
 231 000e 07E0     		b	.L7
 232              	.LVL8:
 233              	.L6:
 338:Core/Src/main.cpp ****   for(;;)
 339:Core/Src/main.cpp ****   {
ARM GAS  /tmp/cci2yK0P.s 			page 11


 340:Core/Src/main.cpp ****     STM32LED:: LED1 -> toggle();
 341:Core/Src/main.cpp ****     motor_rpm = motor_rpm > 1200 ? motor_rpm : motor_rpm + 100;
 342:Core/Src/main.cpp ****     STM32_motor_control::motor_controller_1 -> set_stepper_rpm(motor_rpm);
 234              		.loc 1 342 5 is_stmt 1 discriminator 4 view .LVU60
 235              		.loc 1 342 63 is_stmt 0 discriminator 4 view .LVU61
 236 0010 2146     		mov	r1, r4
 237 0012 084B     		ldr	r3, .L9
 238 0014 1868     		ldr	r0, [r3]
 239 0016 FFF7FEFF 		bl	_ZN19STM32_motor_control24stepper_motor_controller15set_stepper_rpmEm
 240              	.LVL9:
 343:Core/Src/main.cpp ****     osDelay(200);
 241              		.loc 1 343 5 is_stmt 1 discriminator 4 view .LVU62
 242              		.loc 1 343 12 is_stmt 0 discriminator 4 view .LVU63
 243 001a C820     		movs	r0, #200
 244 001c FFF7FEFF 		bl	osDelay
 245              	.LVL10:
 338:Core/Src/main.cpp ****   for(;;)
 246              		.loc 1 338 3 is_stmt 1 discriminator 4 view .LVU64
 247              	.L7:
 338:Core/Src/main.cpp ****   for(;;)
 248              		.loc 1 338 3 view .LVU65
 340:Core/Src/main.cpp ****     motor_rpm = motor_rpm > 1200 ? motor_rpm : motor_rpm + 100;
 249              		.loc 1 340 5 view .LVU66
 340:Core/Src/main.cpp ****     motor_rpm = motor_rpm > 1200 ? motor_rpm : motor_rpm + 100;
 250              		.loc 1 340 30 is_stmt 0 view .LVU67
 251 0020 054B     		ldr	r3, .L9+4
 252 0022 1868     		ldr	r0, [r3]
 253 0024 FFF7FEFF 		bl	_ZN8STM32LED3LED6toggleEv
 254              	.LVL11:
 341:Core/Src/main.cpp ****     STM32_motor_control::motor_controller_1 -> set_stepper_rpm(motor_rpm);
 255              		.loc 1 341 5 is_stmt 1 view .LVU68
 341:Core/Src/main.cpp ****     STM32_motor_control::motor_controller_1 -> set_stepper_rpm(motor_rpm);
 256              		.loc 1 341 34 is_stmt 0 view .LVU69
 257 0028 B4F5966F 		cmp	r4, #1200
 258 002c F0D8     		bhi	.L6
 341:Core/Src/main.cpp ****     STM32_motor_control::motor_controller_1 -> set_stepper_rpm(motor_rpm);
 259              		.loc 1 341 34 discriminator 1 view .LVU70
 260 002e 6434     		adds	r4, r4, #100
 261              	.LVL12:
 341:Core/Src/main.cpp ****     STM32_motor_control::motor_controller_1 -> set_stepper_rpm(motor_rpm);
 262              		.loc 1 341 34 discriminator 1 view .LVU71
 263 0030 EEE7     		b	.L6
 264              	.L10:
 265 0032 00BF     		.align	2
 266              	.L9:
 267 0034 00000000 		.word	_ZN19STM32_motor_control18motor_controller_1E
 268 0038 00000000 		.word	_ZN8STM32LED4LED1E
 269              		.cfi_endproc
 270              	.LFE1040:
 271              		.fnend
 273              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 274              		.align	1
 275              		.global	HAL_TIM_PeriodElapsedCallback
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv5-d16
ARM GAS  /tmp/cci2yK0P.s 			page 12


 281              	HAL_TIM_PeriodElapsedCallback:
 282              		.fnstart
 283              	.LVL13:
 284              	.LFB1041:
 344:Core/Src/main.cpp ****   }
 345:Core/Src/main.cpp ****   /* USER CODE END 5 */
 346:Core/Src/main.cpp **** }
 347:Core/Src/main.cpp **** 
 348:Core/Src/main.cpp **** /**
 349:Core/Src/main.cpp ****   * @brief  Period elapsed callback in non blocking mode
 350:Core/Src/main.cpp ****   * @note   This function is called  when TIM1 interrupt took place, inside
 351:Core/Src/main.cpp ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 352:Core/Src/main.cpp ****   * a global variable "uwTick" used as application time base.
 353:Core/Src/main.cpp ****   * @param  htim : TIM handle
 354:Core/Src/main.cpp ****   * @retval None
 355:Core/Src/main.cpp ****   */
 356:Core/Src/main.cpp **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 357:Core/Src/main.cpp **** {
 285              		.loc 1 357 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		.loc 1 357 1 is_stmt 0 view .LVU73
 290 0000 08B5     		push	{r3, lr}
 291              		.save {r3, lr}
 292              	.LCFI4:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
 358:Core/Src/main.cpp ****   /* USER CODE BEGIN Callback 0 */
 359:Core/Src/main.cpp **** 
 360:Core/Src/main.cpp ****   /* USER CODE END Callback 0 */
 361:Core/Src/main.cpp ****   if (htim->Instance == TIM1) {
 296              		.loc 1 361 3 is_stmt 1 view .LVU74
 297              		.loc 1 361 13 is_stmt 0 view .LVU75
 298 0002 0268     		ldr	r2, [r0]
 299              		.loc 1 361 3 view .LVU76
 300 0004 034B     		ldr	r3, .L15
 301 0006 9A42     		cmp	r2, r3
 302 0008 00D0     		beq	.L14
 303              	.LVL14:
 304              	.L11:
 362:Core/Src/main.cpp ****     HAL_IncTick();
 363:Core/Src/main.cpp ****   }
 364:Core/Src/main.cpp ****   /* USER CODE BEGIN Callback 1 */
 365:Core/Src/main.cpp **** 
 366:Core/Src/main.cpp ****   /* USER CODE END Callback 1 */
 367:Core/Src/main.cpp **** }
 305              		.loc 1 367 1 view .LVU77
 306 000a 08BD     		pop	{r3, pc}
 307              	.LVL15:
 308              	.L14:
 362:Core/Src/main.cpp ****     HAL_IncTick();
 309              		.loc 1 362 5 is_stmt 1 view .LVU78
 362:Core/Src/main.cpp ****     HAL_IncTick();
 310              		.loc 1 362 16 is_stmt 0 view .LVU79
 311 000c FFF7FEFF 		bl	HAL_IncTick
ARM GAS  /tmp/cci2yK0P.s 			page 13


 312              	.LVL16:
 313              		.loc 1 367 1 view .LVU80
 314 0010 FBE7     		b	.L11
 315              	.L16:
 316 0012 00BF     		.align	2
 317              	.L15:
 318 0014 00000140 		.word	1073807360
 319              		.cfi_endproc
 320              	.LFE1041:
 321              		.fnend
 323              		.section	.text.Error_Handler,"ax",%progbits
 324              		.align	1
 325              		.global	Error_Handler
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv5-d16
 331              	Error_Handler:
 332              		.fnstart
 333              	.LFB1042:
 368:Core/Src/main.cpp **** 
 369:Core/Src/main.cpp **** /**
 370:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 371:Core/Src/main.cpp ****   * @retval None
 372:Core/Src/main.cpp ****   */
 373:Core/Src/main.cpp **** void Error_Handler(void)
 374:Core/Src/main.cpp **** {
 334              		.loc 1 374 1 is_stmt 1 view -0
 335              		.cfi_startproc
 336              		@ Volatile: function does not return.
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 375:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 376:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 377:Core/Src/main.cpp ****   __disable_irq();
 340              		.loc 1 377 3 view .LVU82
 341              	.LBB9:
 342              	.LBI9:
 343              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cci2yK0P.s 			page 14


  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  /tmp/cci2yK0P.s 			page 15


  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
ARM GAS  /tmp/cci2yK0P.s 			page 16


 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/cci2yK0P.s 			page 17


 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 344              		.loc 2 207 27 view .LVU83
 345              	.LBB10:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 346              		.loc 2 209 3 view .LVU84
 347              		.loc 2 209 44 is_stmt 0 view .LVU85
 348              		.syntax unified
 349              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 350 0000 72B6     		cpsid i
 351              	@ 0 "" 2
 352              		.thumb
 353              		.syntax unified
 354              	.L18:
 355              	.LBE10:
 356              	.LBE9:
 378:Core/Src/main.cpp ****   while (1)
 357              		.loc 1 378 3 is_stmt 1 discriminator 1 view .LVU86
 358              		.loc 1 378 3 discriminator 1 view .LVU87
 359 0002 FEE7     		b	.L18
 360              		.cfi_endproc
 361              	.LFE1042:
 362              		.cantunwind
 363              		.fnend
 365              		.section	.text._ZL12MX_TIM2_Initv,"ax",%progbits
 366              		.align	1
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv5-d16
 372              	_ZL12MX_TIM2_Initv:
 373              		.fnstart
 374              	.LFB1038:
 226:Core/Src/main.cpp **** 
 375              		.loc 1 226 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 56
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 00B5     		push	{lr}
ARM GAS  /tmp/cci2yK0P.s 			page 18


 380              		.save {lr}
 381              	.LCFI5:
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 14, -4
 384              		.pad #60
 385 0002 8FB0     		sub	sp, sp, #60
 386              	.LCFI6:
 387              		.cfi_def_cfa_offset 64
 232:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 388              		.loc 1 232 3 view .LVU89
 232:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 389              		.loc 1 232 26 is_stmt 0 view .LVU90
 390 0004 0023     		movs	r3, #0
 391 0006 0A93     		str	r3, [sp, #40]
 392 0008 0B93     		str	r3, [sp, #44]
 393 000a 0C93     		str	r3, [sp, #48]
 394 000c 0D93     		str	r3, [sp, #52]
 233:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 395              		.loc 1 233 3 is_stmt 1 view .LVU91
 233:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 396              		.loc 1 233 27 is_stmt 0 view .LVU92
 397 000e 0793     		str	r3, [sp, #28]
 398 0010 0893     		str	r3, [sp, #32]
 399 0012 0993     		str	r3, [sp, #36]
 234:Core/Src/main.cpp **** 
 400              		.loc 1 234 3 is_stmt 1 view .LVU93
 234:Core/Src/main.cpp **** 
 401              		.loc 1 234 22 is_stmt 0 view .LVU94
 402 0014 0093     		str	r3, [sp]
 403 0016 0193     		str	r3, [sp, #4]
 404 0018 0293     		str	r3, [sp, #8]
 405 001a 0393     		str	r3, [sp, #12]
 406 001c 0493     		str	r3, [sp, #16]
 407 001e 0593     		str	r3, [sp, #20]
 408 0020 0693     		str	r3, [sp, #24]
 239:Core/Src/main.cpp ****   htim2.Init.Prescaler = 99;
 409              		.loc 1 239 3 is_stmt 1 view .LVU95
 239:Core/Src/main.cpp ****   htim2.Init.Prescaler = 99;
 410              		.loc 1 239 18 is_stmt 0 view .LVU96
 411 0022 1F48     		ldr	r0, .L31
 412 0024 4FF08042 		mov	r2, #1073741824
 413 0028 0260     		str	r2, [r0]
 240:Core/Src/main.cpp ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 414              		.loc 1 240 3 is_stmt 1 view .LVU97
 240:Core/Src/main.cpp ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 415              		.loc 1 240 24 is_stmt 0 view .LVU98
 416 002a 6322     		movs	r2, #99
 417 002c 4260     		str	r2, [r0, #4]
 241:Core/Src/main.cpp ****   htim2.Init.Period = 1000;
 418              		.loc 1 241 3 is_stmt 1 view .LVU99
 241:Core/Src/main.cpp ****   htim2.Init.Period = 1000;
 419              		.loc 1 241 26 is_stmt 0 view .LVU100
 420 002e 8360     		str	r3, [r0, #8]
 242:Core/Src/main.cpp ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 421              		.loc 1 242 3 is_stmt 1 view .LVU101
 242:Core/Src/main.cpp ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 422              		.loc 1 242 21 is_stmt 0 view .LVU102
ARM GAS  /tmp/cci2yK0P.s 			page 19


 423 0030 4FF47A72 		mov	r2, #1000
 424 0034 C260     		str	r2, [r0, #12]
 243:Core/Src/main.cpp ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 425              		.loc 1 243 3 is_stmt 1 view .LVU103
 243:Core/Src/main.cpp ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 426              		.loc 1 243 28 is_stmt 0 view .LVU104
 427 0036 0361     		str	r3, [r0, #16]
 244:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 428              		.loc 1 244 3 is_stmt 1 view .LVU105
 244:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 429              		.loc 1 244 32 is_stmt 0 view .LVU106
 430 0038 8023     		movs	r3, #128
 431 003a 8361     		str	r3, [r0, #24]
 245:Core/Src/main.cpp ****   {
 432              		.loc 1 245 3 is_stmt 1 view .LVU107
 245:Core/Src/main.cpp ****   {
 433              		.loc 1 245 24 is_stmt 0 view .LVU108
 434 003c FFF7FEFF 		bl	HAL_TIM_Base_Init
 435              	.LVL17:
 245:Core/Src/main.cpp ****   {
 436              		.loc 1 245 3 view .LVU109
 437 0040 20BB     		cbnz	r0, .L26
 249:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 438              		.loc 1 249 3 is_stmt 1 view .LVU110
 249:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 439              		.loc 1 249 34 is_stmt 0 view .LVU111
 440 0042 4FF48053 		mov	r3, #4096
 441 0046 0A93     		str	r3, [sp, #40]
 250:Core/Src/main.cpp ****   {
 442              		.loc 1 250 3 is_stmt 1 view .LVU112
 250:Core/Src/main.cpp ****   {
 443              		.loc 1 250 32 is_stmt 0 view .LVU113
 444 0048 0AA9     		add	r1, sp, #40
 445 004a 1548     		ldr	r0, .L31
 446 004c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 447              	.LVL18:
 250:Core/Src/main.cpp ****   {
 448              		.loc 1 250 3 view .LVU114
 449 0050 F0B9     		cbnz	r0, .L27
 254:Core/Src/main.cpp ****   {
 450              		.loc 1 254 3 is_stmt 1 view .LVU115
 254:Core/Src/main.cpp ****   {
 451              		.loc 1 254 22 is_stmt 0 view .LVU116
 452 0052 1348     		ldr	r0, .L31
 453 0054 FFF7FEFF 		bl	HAL_TIM_OC_Init
 454              	.LVL19:
 254:Core/Src/main.cpp ****   {
 455              		.loc 1 254 3 view .LVU117
 456 0058 E0B9     		cbnz	r0, .L28
 258:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 457              		.loc 1 258 3 is_stmt 1 view .LVU118
 258:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 458              		.loc 1 258 37 is_stmt 0 view .LVU119
 459 005a 0023     		movs	r3, #0
 460 005c 0793     		str	r3, [sp, #28]
 259:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 461              		.loc 1 259 3 is_stmt 1 view .LVU120
ARM GAS  /tmp/cci2yK0P.s 			page 20


 259:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 462              		.loc 1 259 33 is_stmt 0 view .LVU121
 463 005e 0993     		str	r3, [sp, #36]
 260:Core/Src/main.cpp ****   {
 464              		.loc 1 260 3 is_stmt 1 view .LVU122
 260:Core/Src/main.cpp ****   {
 465              		.loc 1 260 44 is_stmt 0 view .LVU123
 466 0060 07A9     		add	r1, sp, #28
 467 0062 0F48     		ldr	r0, .L31
 468 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 469              	.LVL20:
 260:Core/Src/main.cpp ****   {
 470              		.loc 1 260 3 view .LVU124
 471 0068 B0B9     		cbnz	r0, .L29
 264:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 472              		.loc 1 264 3 is_stmt 1 view .LVU125
 264:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 473              		.loc 1 264 20 is_stmt 0 view .LVU126
 474 006a 3023     		movs	r3, #48
 475 006c 0093     		str	r3, [sp]
 265:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 476              		.loc 1 265 3 is_stmt 1 view .LVU127
 265:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 477              		.loc 1 265 19 is_stmt 0 view .LVU128
 478 006e 0022     		movs	r2, #0
 479 0070 0192     		str	r2, [sp, #4]
 266:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 480              		.loc 1 266 3 is_stmt 1 view .LVU129
 266:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 481              		.loc 1 266 24 is_stmt 0 view .LVU130
 482 0072 0292     		str	r2, [sp, #8]
 267:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 483              		.loc 1 267 3 is_stmt 1 view .LVU131
 267:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 484              		.loc 1 267 24 is_stmt 0 view .LVU132
 485 0074 0492     		str	r2, [sp, #16]
 268:Core/Src/main.cpp ****   {
 486              		.loc 1 268 3 is_stmt 1 view .LVU133
 268:Core/Src/main.cpp ****   {
 487              		.loc 1 268 31 is_stmt 0 view .LVU134
 488 0076 6946     		mov	r1, sp
 489 0078 0948     		ldr	r0, .L31
 490 007a FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 491              	.LVL21:
 268:Core/Src/main.cpp ****   {
 492              		.loc 1 268 3 view .LVU135
 493 007e 68B9     		cbnz	r0, .L30
 275:Core/Src/main.cpp **** 
 494              		.loc 1 275 3 is_stmt 1 view .LVU136
 275:Core/Src/main.cpp **** 
 495              		.loc 1 275 22 is_stmt 0 view .LVU137
 496 0080 0748     		ldr	r0, .L31
 497 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 498              	.LVL22:
 277:Core/Src/main.cpp **** 
 499              		.loc 1 277 1 view .LVU138
 500 0086 0FB0     		add	sp, sp, #60
ARM GAS  /tmp/cci2yK0P.s 			page 21


 501              	.LCFI7:
 502              		.cfi_remember_state
 503              		.cfi_def_cfa_offset 4
 504              		@ sp needed
 505 0088 5DF804FB 		ldr	pc, [sp], #4
 506              	.L26:
 507              	.LCFI8:
 508              		.cfi_restore_state
 247:Core/Src/main.cpp ****   }
 509              		.loc 1 247 5 is_stmt 1 view .LVU139
 247:Core/Src/main.cpp ****   }
 510              		.loc 1 247 18 is_stmt 0 view .LVU140
 511 008c FFF7FEFF 		bl	Error_Handler
 512              	.LVL23:
 513              	.L27:
 252:Core/Src/main.cpp ****   }
 514              		.loc 1 252 5 is_stmt 1 view .LVU141
 252:Core/Src/main.cpp ****   }
 515              		.loc 1 252 18 is_stmt 0 view .LVU142
 516 0090 FFF7FEFF 		bl	Error_Handler
 517              	.LVL24:
 518              	.L28:
 256:Core/Src/main.cpp ****   }
 519              		.loc 1 256 5 is_stmt 1 view .LVU143
 256:Core/Src/main.cpp ****   }
 520              		.loc 1 256 18 is_stmt 0 view .LVU144
 521 0094 FFF7FEFF 		bl	Error_Handler
 522              	.LVL25:
 523              	.L29:
 262:Core/Src/main.cpp ****   }
 524              		.loc 1 262 5 is_stmt 1 view .LVU145
 262:Core/Src/main.cpp ****   }
 525              		.loc 1 262 18 is_stmt 0 view .LVU146
 526 0098 FFF7FEFF 		bl	Error_Handler
 527              	.LVL26:
 528              	.L30:
 270:Core/Src/main.cpp ****   }
 529              		.loc 1 270 5 is_stmt 1 view .LVU147
 270:Core/Src/main.cpp ****   }
 530              		.loc 1 270 18 is_stmt 0 view .LVU148
 531 009c FFF7FEFF 		bl	Error_Handler
 532              	.LVL27:
 533              	.L32:
 534              		.align	2
 535              	.L31:
 536 00a0 00000000 		.word	.LANCHOR0
 537              		.cfi_endproc
 538              	.LFE1038:
 539              		.fnend
 541              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
 542              		.align	1
 543              		.global	_Z18SystemClock_Configv
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv5-d16
 549              	_Z18SystemClock_Configv:
ARM GAS  /tmp/cci2yK0P.s 			page 22


 550              		.fnstart
 551              	.LFB1037:
 166:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 552              		.loc 1 166 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 112
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 00B5     		push	{lr}
 557              		.save {lr}
 558              	.LCFI9:
 559              		.cfi_def_cfa_offset 4
 560              		.cfi_offset 14, -4
 561              		.pad #116
 562 0002 9DB0     		sub	sp, sp, #116
 563              	.LCFI10:
 564              		.cfi_def_cfa_offset 120
 167:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 565              		.loc 1 167 3 view .LVU150
 167:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 566              		.loc 1 167 22 is_stmt 0 view .LVU151
 567 0004 4C22     		movs	r2, #76
 568 0006 0021     		movs	r1, #0
 569 0008 09A8     		add	r0, sp, #36
 570 000a FFF7FEFF 		bl	memset
 571              	.LVL28:
 168:Core/Src/main.cpp **** 
 572              		.loc 1 168 3 is_stmt 1 view .LVU152
 168:Core/Src/main.cpp **** 
 573              		.loc 1 168 22 is_stmt 0 view .LVU153
 574 000e 2022     		movs	r2, #32
 575 0010 0021     		movs	r1, #0
 576 0012 01A8     		add	r0, sp, #4
 577 0014 FFF7FEFF 		bl	memset
 578              	.LVL29:
 172:Core/Src/main.cpp **** 
 579              		.loc 1 172 3 is_stmt 1 view .LVU154
 172:Core/Src/main.cpp **** 
 580              		.loc 1 172 25 is_stmt 0 view .LVU155
 581 0018 0220     		movs	r0, #2
 582 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 583              	.LVL30:
 176:Core/Src/main.cpp **** 
 584              		.loc 1 176 3 is_stmt 1 view .LVU156
 585              	.LBB11:
 176:Core/Src/main.cpp **** 
 586              		.loc 1 176 3 view .LVU157
 587 001e 0023     		movs	r3, #0
 588 0020 0093     		str	r3, [sp]
 176:Core/Src/main.cpp **** 
 589              		.loc 1 176 3 view .LVU158
 590 0022 214B     		ldr	r3, .L40
 591 0024 9A69     		ldr	r2, [r3, #24]
 592 0026 42F44042 		orr	r2, r2, #49152
 593 002a 9A61     		str	r2, [r3, #24]
 176:Core/Src/main.cpp **** 
 594              		.loc 1 176 3 view .LVU159
 595 002c 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/cci2yK0P.s 			page 23


 596 002e 03F44043 		and	r3, r3, #49152
 597 0032 0093     		str	r3, [sp]
 176:Core/Src/main.cpp **** 
 598              		.loc 1 176 3 view .LVU160
 599 0034 009B     		ldr	r3, [sp]
 600              	.L34:
 601              	.LBE11:
 178:Core/Src/main.cpp **** 
 602              		.loc 1 178 3 view .LVU161
 178:Core/Src/main.cpp **** 
 603              		.loc 1 178 9 view .LVU162
 178:Core/Src/main.cpp **** 
 604              		.loc 1 178 10 is_stmt 0 view .LVU163
 605 0036 1C4B     		ldr	r3, .L40
 606 0038 9B69     		ldr	r3, [r3, #24]
 178:Core/Src/main.cpp **** 
 607              		.loc 1 178 9 view .LVU164
 608 003a 13F4005F 		tst	r3, #8192
 609 003e FAD0     		beq	.L34
 183:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 610              		.loc 1 183 3 is_stmt 1 view .LVU165
 183:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 611              		.loc 1 183 36 is_stmt 0 view .LVU166
 612 0040 0223     		movs	r3, #2
 613 0042 0993     		str	r3, [sp, #36]
 184:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 614              		.loc 1 184 3 is_stmt 1 view .LVU167
 184:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 615              		.loc 1 184 30 is_stmt 0 view .LVU168
 616 0044 0121     		movs	r1, #1
 617 0046 0C91     		str	r1, [sp, #48]
 185:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 618              		.loc 1 185 3 is_stmt 1 view .LVU169
 185:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 619              		.loc 1 185 41 is_stmt 0 view .LVU170
 620 0048 4022     		movs	r2, #64
 621 004a 0D92     		str	r2, [sp, #52]
 186:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 622              		.loc 1 186 3 is_stmt 1 view .LVU171
 186:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 623              		.loc 1 186 34 is_stmt 0 view .LVU172
 624 004c 1293     		str	r3, [sp, #72]
 187:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 32;
 625              		.loc 1 187 3 is_stmt 1 view .LVU173
 187:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 32;
 626              		.loc 1 187 35 is_stmt 0 view .LVU174
 627 004e 0022     		movs	r2, #0
 628 0050 1392     		str	r2, [sp, #76]
 188:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 200;
 629              		.loc 1 188 3 is_stmt 1 view .LVU175
 188:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 200;
 630              		.loc 1 188 30 is_stmt 0 view .LVU176
 631 0052 2020     		movs	r0, #32
 632 0054 1490     		str	r0, [sp, #80]
 189:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = 1;
 633              		.loc 1 189 3 is_stmt 1 view .LVU177
 189:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = 1;
ARM GAS  /tmp/cci2yK0P.s 			page 24


 634              		.loc 1 189 30 is_stmt 0 view .LVU178
 635 0056 C820     		movs	r0, #200
 636 0058 1590     		str	r0, [sp, #84]
 190:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 637              		.loc 1 190 3 is_stmt 1 view .LVU179
 190:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 638              		.loc 1 190 30 is_stmt 0 view .LVU180
 639 005a 1691     		str	r1, [sp, #88]
 191:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = 2;
 640              		.loc 1 191 3 is_stmt 1 view .LVU181
 191:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = 2;
 641              		.loc 1 191 30 is_stmt 0 view .LVU182
 642 005c 1793     		str	r3, [sp, #92]
 192:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
 643              		.loc 1 192 3 is_stmt 1 view .LVU183
 192:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
 644              		.loc 1 192 30 is_stmt 0 view .LVU184
 645 005e 1893     		str	r3, [sp, #96]
 193:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 646              		.loc 1 193 3 is_stmt 1 view .LVU185
 193:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 647              		.loc 1 193 32 is_stmt 0 view .LVU186
 648 0060 0423     		movs	r3, #4
 649 0062 1993     		str	r3, [sp, #100]
 194:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 650              		.loc 1 194 3 is_stmt 1 view .LVU187
 194:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 651              		.loc 1 194 35 is_stmt 0 view .LVU188
 652 0064 1A92     		str	r2, [sp, #104]
 195:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 653              		.loc 1 195 3 is_stmt 1 view .LVU189
 195:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 654              		.loc 1 195 34 is_stmt 0 view .LVU190
 655 0066 1B92     		str	r2, [sp, #108]
 196:Core/Src/main.cpp ****   {
 656              		.loc 1 196 3 is_stmt 1 view .LVU191
 196:Core/Src/main.cpp ****   {
 657              		.loc 1 196 24 is_stmt 0 view .LVU192
 658 0068 09A8     		add	r0, sp, #36
 659 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 660              	.LVL31:
 196:Core/Src/main.cpp ****   {
 661              		.loc 1 196 3 view .LVU193
 662 006e B0B9     		cbnz	r0, .L38
 203:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 663              		.loc 1 203 3 is_stmt 1 view .LVU194
 203:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 664              		.loc 1 203 31 is_stmt 0 view .LVU195
 665 0070 3F23     		movs	r3, #63
 666 0072 0193     		str	r3, [sp, #4]
 206:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 667              		.loc 1 206 3 is_stmt 1 view .LVU196
 206:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 668              		.loc 1 206 34 is_stmt 0 view .LVU197
 669 0074 0323     		movs	r3, #3
 670 0076 0293     		str	r3, [sp, #8]
 207:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/cci2yK0P.s 			page 25


 671              		.loc 1 207 3 is_stmt 1 view .LVU198
 207:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 672              		.loc 1 207 35 is_stmt 0 view .LVU199
 673 0078 0023     		movs	r3, #0
 674 007a 0393     		str	r3, [sp, #12]
 208:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 675              		.loc 1 208 3 is_stmt 1 view .LVU200
 208:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 676              		.loc 1 208 35 is_stmt 0 view .LVU201
 677 007c 0823     		movs	r3, #8
 678 007e 0493     		str	r3, [sp, #16]
 209:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 679              		.loc 1 209 3 is_stmt 1 view .LVU202
 209:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 680              		.loc 1 209 36 is_stmt 0 view .LVU203
 681 0080 4023     		movs	r3, #64
 682 0082 0593     		str	r3, [sp, #20]
 210:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 683              		.loc 1 210 3 is_stmt 1 view .LVU204
 210:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 684              		.loc 1 210 36 is_stmt 0 view .LVU205
 685 0084 0693     		str	r3, [sp, #24]
 211:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 686              		.loc 1 211 3 is_stmt 1 view .LVU206
 211:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 687              		.loc 1 211 36 is_stmt 0 view .LVU207
 688 0086 4FF48062 		mov	r2, #1024
 689 008a 0792     		str	r2, [sp, #28]
 212:Core/Src/main.cpp **** 
 690              		.loc 1 212 3 is_stmt 1 view .LVU208
 212:Core/Src/main.cpp **** 
 691              		.loc 1 212 36 is_stmt 0 view .LVU209
 692 008c 0893     		str	r3, [sp, #32]
 214:Core/Src/main.cpp ****   {
 693              		.loc 1 214 3 is_stmt 1 view .LVU210
 214:Core/Src/main.cpp ****   {
 694              		.loc 1 214 26 is_stmt 0 view .LVU211
 695 008e 0221     		movs	r1, #2
 696 0090 01A8     		add	r0, sp, #4
 697 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 698              	.LVL32:
 214:Core/Src/main.cpp ****   {
 699              		.loc 1 214 3 view .LVU212
 700 0096 20B9     		cbnz	r0, .L39
 218:Core/Src/main.cpp **** 
 701              		.loc 1 218 1 view .LVU213
 702 0098 1DB0     		add	sp, sp, #116
 703              	.LCFI11:
 704              		.cfi_remember_state
 705              		.cfi_def_cfa_offset 4
 706              		@ sp needed
 707 009a 5DF804FB 		ldr	pc, [sp], #4
 708              	.L38:
 709              	.LCFI12:
 710              		.cfi_restore_state
 198:Core/Src/main.cpp ****   }
 711              		.loc 1 198 5 is_stmt 1 view .LVU214
ARM GAS  /tmp/cci2yK0P.s 			page 26


 198:Core/Src/main.cpp ****   }
 712              		.loc 1 198 18 is_stmt 0 view .LVU215
 713 009e FFF7FEFF 		bl	Error_Handler
 714              	.LVL33:
 715              	.L39:
 216:Core/Src/main.cpp ****   }
 716              		.loc 1 216 5 is_stmt 1 view .LVU216
 216:Core/Src/main.cpp ****   }
 717              		.loc 1 216 18 is_stmt 0 view .LVU217
 718 00a2 FFF7FEFF 		bl	Error_Handler
 719              	.LVL34:
 720              	.L41:
 721 00a6 00BF     		.align	2
 722              	.L40:
 723 00a8 00480258 		.word	1476544512
 724              		.cfi_endproc
 725              	.LFE1037:
 726              		.fnend
 728              		.section	.text.main,"ax",%progbits
 729              		.align	1
 730              		.global	main
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 734              		.fpu fpv5-d16
 736              	main:
 737              		.fnstart
 738              	.LFB1036:
  79:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 739              		.loc 1 79 1 is_stmt 1 view -0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743 0000 10B5     		push	{r4, lr}
 744              		.save {r4, lr}
 745              	.LCFI13:
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 4, -8
 748              		.cfi_offset 14, -4
  83:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
 749              		.loc 1 83 3 view .LVU219
  83:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
 750              		.loc 1 83 54 is_stmt 0 view .LVU220
 751 0002 0C20     		movs	r0, #12
 752              	.LEHB0:
 753 0004 FFF7FEFF 		bl	_Znwj
 754              	.LVL35:
 755              	.LEHE0:
 756 0008 0446     		mov	r4, r0
 757 000a 0122     		movs	r2, #1
 758 000c 2A49     		ldr	r1, .L53
 759              	.LEHB1:
 760 000e FFF7FEFF 		bl	_ZN8STM32LED3LEDC1EP12GPIO_TypeDeft
 761              	.LVL36:
 762              	.LEHE1:
  83:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
 763              		.loc 1 83 17 discriminator 2 view .LVU221
ARM GAS  /tmp/cci2yK0P.s 			page 27


 764 0012 2A4B     		ldr	r3, .L53+4
 765 0014 1C60     		str	r4, [r3]
  84:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
 766              		.loc 1 84 3 is_stmt 1 discriminator 2 view .LVU222
  84:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
 767              		.loc 1 84 54 is_stmt 0 discriminator 2 view .LVU223
 768 0016 0C20     		movs	r0, #12
 769              	.LEHB2:
 770 0018 FFF7FEFF 		bl	_Znwj
 771              	.LVL37:
 772              	.LEHE2:
 773 001c 0446     		mov	r4, r0
 774 001e 0222     		movs	r2, #2
 775 0020 2749     		ldr	r1, .L53+8
 776              	.LEHB3:
 777 0022 FFF7FEFF 		bl	_ZN8STM32LED3LEDC1EP12GPIO_TypeDeft
 778              	.LVL38:
 779              	.LEHE3:
  84:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
 780              		.loc 1 84 17 discriminator 2 view .LVU224
 781 0026 274B     		ldr	r3, .L53+12
 782 0028 1C60     		str	r4, [r3]
  85:Core/Src/main.cpp **** 
 783              		.loc 1 85 3 is_stmt 1 discriminator 2 view .LVU225
  85:Core/Src/main.cpp **** 
 784              		.loc 1 85 55 is_stmt 0 discriminator 2 view .LVU226
 785 002a 0C20     		movs	r0, #12
 786              	.LEHB4:
 787 002c FFF7FEFF 		bl	_Znwj
 788              	.LVL39:
 789              	.LEHE4:
 790 0030 0446     		mov	r4, r0
 791 0032 4FF48042 		mov	r2, #16384
 792 0036 2049     		ldr	r1, .L53
 793              	.LEHB5:
 794 0038 FFF7FEFF 		bl	_ZN8STM32LED3LEDC1EP12GPIO_TypeDeft
 795              	.LVL40:
 796              	.LEHE5:
  85:Core/Src/main.cpp **** 
 797              		.loc 1 85 17 discriminator 2 view .LVU227
 798 003c 224B     		ldr	r3, .L53+16
 799 003e 1C60     		str	r4, [r3]
  88:Core/Src/main.cpp **** 
 800              		.loc 1 88 3 is_stmt 1 discriminator 2 view .LVU228
  88:Core/Src/main.cpp **** 
 801              		.loc 1 88 122 is_stmt 0 discriminator 2 view .LVU229
 802 0040 1420     		movs	r0, #20
 803              	.LEHB6:
 804 0042 FFF7FEFF 		bl	_Znwj
 805              	.LVL41:
 806              	.LEHE6:
 807 0046 0446     		mov	r4, r0
 808 0048 204B     		ldr	r3, .L53+20
 809 004a 0122     		movs	r2, #1
 810 004c 2049     		ldr	r1, .L53+24
 811              	.LEHB7:
 812 004e FFF7FEFF 		bl	_ZN19STM32_motor_control24stepper_motor_controllerC1EP12GPIO_TypeDeftP17TIM_HandleTypeDef
ARM GAS  /tmp/cci2yK0P.s 			page 28


 813              	.LVL42:
 814              	.LEHE7:
  88:Core/Src/main.cpp **** 
 815              		.loc 1 88 43 discriminator 2 view .LVU230
 816 0052 204B     		ldr	r3, .L53+28
 817 0054 1C60     		str	r4, [r3]
  95:Core/Src/main.cpp **** 
 818              		.loc 1 95 3 is_stmt 1 discriminator 2 view .LVU231
 819              	.LEHB8:
  95:Core/Src/main.cpp **** 
 820              		.loc 1 95 11 is_stmt 0 discriminator 2 view .LVU232
 821 0056 FFF7FEFF 		bl	HAL_Init
 822              	.LVL43:
 102:Core/Src/main.cpp **** 
 823              		.loc 1 102 3 is_stmt 1 discriminator 2 view .LVU233
 102:Core/Src/main.cpp **** 
 824              		.loc 1 102 21 is_stmt 0 discriminator 2 view .LVU234
 825 005a FFF7FEFF 		bl	_Z18SystemClock_Configv
 826              	.LVL44:
 109:Core/Src/main.cpp ****   MX_TIM2_Init();
 827              		.loc 1 109 3 is_stmt 1 discriminator 2 view .LVU235
 109:Core/Src/main.cpp ****   MX_TIM2_Init();
 828              		.loc 1 109 15 is_stmt 0 discriminator 2 view .LVU236
 829 005e FFF7FEFF 		bl	_ZL12MX_GPIO_Initv
 830              	.LVL45:
 110:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 831              		.loc 1 110 3 is_stmt 1 discriminator 2 view .LVU237
 110:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 832              		.loc 1 110 15 is_stmt 0 discriminator 2 view .LVU238
 833 0062 FFF7FEFF 		bl	_ZL12MX_TIM2_Initv
 834              	.LVL46:
 112:Core/Src/main.cpp ****   /* USER CODE END 2 */
 835              		.loc 1 112 3 is_stmt 1 discriminator 2 view .LVU239
 112:Core/Src/main.cpp ****   /* USER CODE END 2 */
 836              		.loc 1 112 19 is_stmt 0 discriminator 2 view .LVU240
 837 0066 0021     		movs	r1, #0
 838 0068 1848     		ldr	r0, .L53+20
 839 006a FFF7FEFF 		bl	HAL_TIM_OC_Start
 840              	.LVL47:
 116:Core/Src/main.cpp **** 
 841              		.loc 1 116 3 is_stmt 1 discriminator 2 view .LVU241
 116:Core/Src/main.cpp **** 
 842              		.loc 1 116 21 is_stmt 0 discriminator 2 view .LVU242
 843 006e FFF7FEFF 		bl	osKernelInitialize
 844              	.LVL48:
 136:Core/Src/main.cpp **** 
 845              		.loc 1 136 3 is_stmt 1 discriminator 2 view .LVU243
 136:Core/Src/main.cpp **** 
 846              		.loc 1 136 34 is_stmt 0 discriminator 2 view .LVU244
 847 0072 194A     		ldr	r2, .L53+32
 848 0074 0021     		movs	r1, #0
 849 0076 1948     		ldr	r0, .L53+36
 850 0078 FFF7FEFF 		bl	osThreadNew
 851              	.LVL49:
 136:Core/Src/main.cpp **** 
 852              		.loc 1 136 21 discriminator 2 view .LVU245
 853 007c 184B     		ldr	r3, .L53+40
ARM GAS  /tmp/cci2yK0P.s 			page 29


 854 007e 1860     		str	r0, [r3]
 148:Core/Src/main.cpp ****   /* We should never get here as control is now taken by the scheduler */
 855              		.loc 1 148 3 is_stmt 1 discriminator 2 view .LVU246
 148:Core/Src/main.cpp ****   /* We should never get here as control is now taken by the scheduler */
 856              		.loc 1 148 16 is_stmt 0 discriminator 2 view .LVU247
 857 0080 FFF7FEFF 		bl	osKernelStart
 858              	.LVL50:
 859              	.L43:
 152:Core/Src/main.cpp ****   {
 860              		.loc 1 152 3 is_stmt 1 discriminator 1 view .LVU248
 152:Core/Src/main.cpp ****   {
 861              		.loc 1 152 3 discriminator 1 view .LVU249
 862 0084 FEE7     		b	.L43
 863              	.L48:
  83:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
 864              		.loc 1 83 54 is_stmt 0 view .LVU250
 865 0086 0C21     		movs	r1, #12
 866 0088 2046     		mov	r0, r4
 867 008a FFF7FEFF 		bl	_ZdlPvj
 868              	.LVL51:
 869 008e FFF7FEFF 		bl	__cxa_end_cleanup
 870              	.LVL52:
 871              	.L49:
  84:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
 872              		.loc 1 84 54 view .LVU251
 873 0092 0C21     		movs	r1, #12
 874 0094 2046     		mov	r0, r4
 875 0096 FFF7FEFF 		bl	_ZdlPvj
 876              	.LVL53:
 877 009a FFF7FEFF 		bl	__cxa_end_cleanup
 878              	.LVL54:
 879              	.L50:
  85:Core/Src/main.cpp **** 
 880              		.loc 1 85 55 view .LVU252
 881 009e 0C21     		movs	r1, #12
 882 00a0 2046     		mov	r0, r4
 883 00a2 FFF7FEFF 		bl	_ZdlPvj
 884              	.LVL55:
 885 00a6 FFF7FEFF 		bl	__cxa_end_cleanup
 886              	.LVL56:
 887              	.L51:
  88:Core/Src/main.cpp **** 
 888              		.loc 1 88 122 view .LVU253
 889 00aa 1421     		movs	r1, #20
 890 00ac 2046     		mov	r0, r4
 891 00ae FFF7FEFF 		bl	_ZdlPvj
 892              	.LVL57:
 893 00b2 FFF7FEFF 		bl	__cxa_end_cleanup
 894              	.LVL58:
 895              	.LEHE8:
 896              	.L54:
 897 00b6 00BF     		.align	2
 898              	.L53:
 899 00b8 00040258 		.word	1476527104
 900 00bc 00000000 		.word	_ZN8STM32LED4LED1E
 901 00c0 00100258 		.word	1476530176
 902 00c4 00000000 		.word	_ZN8STM32LED4LED2E
ARM GAS  /tmp/cci2yK0P.s 			page 30


 903 00c8 00000000 		.word	_ZN8STM32LED4LED3E
 904 00cc 00000000 		.word	.LANCHOR0
 905 00d0 00000258 		.word	1476526080
 906 00d4 00000000 		.word	_ZN19STM32_motor_control18motor_controller_1E
 907 00d8 00000000 		.word	.LANCHOR1
 908 00dc 00000000 		.word	_Z16StartDefaultTaskPv
 909 00e0 00000000 		.word	.LANCHOR2
 910              		.cfi_endproc
 911              	.LFE1036:
 912              		.global	__gxx_personality_v0
 913              		.personality	__gxx_personality_v0
 914              		.handlerdata
 915              	.LLSDA1036:
 916 0008 FF       		.byte	0xff
 917 0009 FF       		.byte	0xff
 918 000a 01       		.byte	0x1
 919 000b 28       		.uleb128 .LLSDACSE1036-.LLSDACSB1036
 920              	.LLSDACSB1036:
 921 000c 04       		.uleb128 .LEHB0-.LFB1036
 922 000d 04       		.uleb128 .LEHE0-.LEHB0
 923 000e 00       		.uleb128 0
 924 000f 00       		.uleb128 0
 925 0010 0E       		.uleb128 .LEHB1-.LFB1036
 926 0011 04       		.uleb128 .LEHE1-.LEHB1
 927 0012 8601     		.uleb128 .L48-.LFB1036
 928 0014 00       		.uleb128 0
 929 0015 18       		.uleb128 .LEHB2-.LFB1036
 930 0016 04       		.uleb128 .LEHE2-.LEHB2
 931 0017 00       		.uleb128 0
 932 0018 00       		.uleb128 0
 933 0019 22       		.uleb128 .LEHB3-.LFB1036
 934 001a 04       		.uleb128 .LEHE3-.LEHB3
 935 001b 9201     		.uleb128 .L49-.LFB1036
 936 001d 00       		.uleb128 0
 937 001e 2C       		.uleb128 .LEHB4-.LFB1036
 938 001f 04       		.uleb128 .LEHE4-.LEHB4
 939 0020 00       		.uleb128 0
 940 0021 00       		.uleb128 0
 941 0022 38       		.uleb128 .LEHB5-.LFB1036
 942 0023 04       		.uleb128 .LEHE5-.LEHB5
 943 0024 9E01     		.uleb128 .L50-.LFB1036
 944 0026 00       		.uleb128 0
 945 0027 42       		.uleb128 .LEHB6-.LFB1036
 946 0028 04       		.uleb128 .LEHE6-.LEHB6
 947 0029 00       		.uleb128 0
 948 002a 00       		.uleb128 0
 949 002b 4E       		.uleb128 .LEHB7-.LFB1036
 950 002c 04       		.uleb128 .LEHE7-.LEHB7
 951 002d AA01     		.uleb128 .L51-.LFB1036
 952 002f 00       		.uleb128 0
 953 0030 56       		.uleb128 .LEHB8-.LFB1036
 954 0031 60       		.uleb128 .LEHE8-.LEHB8
 955 0032 00       		.uleb128 0
 956 0033 00       		.uleb128 0
 957              	.LLSDACSE1036:
 958              		.section	.text.main
 959              		.fnend
ARM GAS  /tmp/cci2yK0P.s 			page 31


 961              		.section	.rodata.str1.4,"aMS",%progbits,1
 962              		.align	2
 963              	.LC0:
 964 0000 64656661 		.ascii	"defaultTask\000"
 964      756C7454 
 964      61736B00 
 965              		.global	defaultTaskHandle
 966              		.global	htim2
 967              		.section	.bss.defaultTaskHandle,"aw",%nobits
 968              		.align	2
 969              		.set	.LANCHOR2,. + 0
 972              	defaultTaskHandle:
 973 0000 00000000 		.space	4
 974              		.section	.bss.htim2,"aw",%nobits
 975              		.align	2
 976              		.set	.LANCHOR0,. + 0
 979              	htim2:
 980 0000 00000000 		.space	76
 980      00000000 
 980      00000000 
 980      00000000 
 980      00000000 
 981              		.section	.rodata._ZL22defaultTask_attributes,"a"
 982              		.align	2
 983              		.set	.LANCHOR1,. + 0
 986              	_ZL22defaultTask_attributes:
 987 0000 00000000 		.word	.LC0
 988 0004 00000000 		.space	16
 988      00000000 
 988      00000000 
 988      00000000 
 989 0014 00020000 		.word	512
 990 0018 18000000 		.word	24
 991 001c 00000000 		.space	8
 991      00000000 
 992              		.text
 993              	.Letext0:
 994              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 995              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 996              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 997              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h733xx.h"
 998              		.file 7 "/usr/include/newlib/c++/9.2.1/cmath"
 999              		.file 8 "/usr/include/newlib/c++/9.2.1/type_traits"
 1000              		.file 9 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 1001              		.file 10 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 1002              		.file 11 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 1003              		.file 12 "/usr/include/newlib/c++/9.2.1/limits"
 1004              		.file 13 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1005              		.file 14 "/usr/include/newlib/c++/9.2.1/tr1/special_function_util.h"
 1006              		.file 15 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 1007              		.file 16 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1008              		.file 17 "/usr/include/newlib/sys/_types.h"
 1009              		.file 18 "/usr/include/newlib/sys/reent.h"
 1010              		.file 19 "/usr/include/newlib/sys/lock.h"
 1011              		.file 20 "/usr/include/newlib/math.h"
 1012              		.file 21 "/usr/include/newlib/c++/9.2.1/math.h"
 1013              		.file 22 "/usr/include/newlib/stdlib.h"
ARM GAS  /tmp/cci2yK0P.s 			page 32


 1014              		.file 23 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1015              		.file 24 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 1016              		.file 25 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 1017              		.file 26 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1018              		.file 27 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1019              		.file 28 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 1020              		.file 29 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1021              		.file 30 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1022              		.file 31 "Modules/inc/LED.h"
 1023              		.file 32 "Modules/inc/motorControl.h"
 1024              		.file 33 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim_ex.h"
 1025              		.file 34 "Core/Inc/main.h"
 1026              		.file 35 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 1027              		.file 36 "<built-in>"
ARM GAS  /tmp/cci2yK0P.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cci2yK0P.s:17     .text._ZL12MX_GPIO_Initv:0000000000000000 $t
     /tmp/cci2yK0P.s:24     .text._ZL12MX_GPIO_Initv:0000000000000000 _ZL12MX_GPIO_Initv
     /tmp/cci2yK0P.s:188    .text._ZL12MX_GPIO_Initv:00000000000000d0 $d
.ARM.exidx.text._ZL12MX_GPIO_Initv:0000000000000000 $d
     /tmp/cci2yK0P.s:196    .text._Z16StartDefaultTaskPv:0000000000000000 $t
     /tmp/cci2yK0P.s:203    .text._Z16StartDefaultTaskPv:0000000000000000 _Z16StartDefaultTaskPv
     /tmp/cci2yK0P.s:267    .text._Z16StartDefaultTaskPv:0000000000000034 $d
.ARM.exidx.text._Z16StartDefaultTaskPv:0000000000000000 $d
     /tmp/cci2yK0P.s:274    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cci2yK0P.s:281    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cci2yK0P.s:318    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
.ARM.extab.text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $d
.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $d
     /tmp/cci2yK0P.s:324    .text.Error_Handler:0000000000000000 $t
     /tmp/cci2yK0P.s:331    .text.Error_Handler:0000000000000000 Error_Handler
    .ARM.exidx.text.Error_Handler:0000000000000000 $d
     /tmp/cci2yK0P.s:366    .text._ZL12MX_TIM2_Initv:0000000000000000 $t
     /tmp/cci2yK0P.s:372    .text._ZL12MX_TIM2_Initv:0000000000000000 _ZL12MX_TIM2_Initv
     /tmp/cci2yK0P.s:536    .text._ZL12MX_TIM2_Initv:00000000000000a0 $d
.ARM.exidx.text._ZL12MX_TIM2_Initv:0000000000000000 $d
     /tmp/cci2yK0P.s:542    .text._Z18SystemClock_Configv:0000000000000000 $t
     /tmp/cci2yK0P.s:549    .text._Z18SystemClock_Configv:0000000000000000 _Z18SystemClock_Configv
     /tmp/cci2yK0P.s:723    .text._Z18SystemClock_Configv:00000000000000a8 $d
.ARM.exidx.text._Z18SystemClock_Configv:0000000000000000 $d
     /tmp/cci2yK0P.s:729    .text.main:0000000000000000 $t
     /tmp/cci2yK0P.s:736    .text.main:0000000000000000 main
     /tmp/cci2yK0P.s:899    .text.main:00000000000000b8 $d
             .ARM.extab.text.main:0000000000000000 $d
             .ARM.exidx.text.main:0000000000000000 $d
     /tmp/cci2yK0P.s:962    .rodata.str1.4:0000000000000000 $d
     /tmp/cci2yK0P.s:972    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/cci2yK0P.s:979    .bss.htim2:0000000000000000 htim2
     /tmp/cci2yK0P.s:968    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/cci2yK0P.s:975    .bss.htim2:0000000000000000 $d
     /tmp/cci2yK0P.s:982    .rodata._ZL22defaultTask_attributes:0000000000000000 $d
     /tmp/cci2yK0P.s:986    .rodata._ZL22defaultTask_attributes:0000000000000000 _ZL22defaultTask_attributes

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_unwind_cpp_pr0
_ZN19STM32_motor_control24stepper_motor_controller15set_stepper_rpmEm
osDelay
_ZN8STM32LED3LED6toggleEv
_ZN19STM32_motor_control18motor_controller_1E
_ZN8STM32LED4LED1E
HAL_IncTick
__aeabi_unwind_cpp_pr1
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_TIM_MspPostInit
memset
ARM GAS  /tmp/cci2yK0P.s 			page 34


HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
_Znwj
_ZN8STM32LED3LEDC1EP12GPIO_TypeDeft
_ZN19STM32_motor_control24stepper_motor_controllerC1EP12GPIO_TypeDeftP17TIM_HandleTypeDef
HAL_Init
HAL_TIM_OC_Start
osKernelInitialize
osThreadNew
osKernelStart
_ZdlPvj
__cxa_end_cleanup
_ZN8STM32LED4LED2E
_ZN8STM32LED4LED3E
__gxx_personality_v0
