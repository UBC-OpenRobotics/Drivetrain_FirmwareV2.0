ARM GAS  /tmp/ccaS5fC6.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZL12MX_GPIO_Initv,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	_ZL12MX_GPIO_Initv:
  25              		.fnstart
  26              	.LFB1039:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.cpp ****   * in the root directory of this software component.
  14:Core/Src/main.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.cpp ****   *
  16:Core/Src/main.cpp ****   ******************************************************************************
  17:Core/Src/main.cpp ****   */
  18:Core/Src/main.cpp **** /* USER CODE END Header */
  19:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.cpp **** #include "main.h"
  21:Core/Src/main.cpp **** #include "cmsis_os.h"
  22:Core/Src/main.cpp **** 
  23:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.cpp **** #include "LED.h"
  26:Core/Src/main.cpp **** /* USER CODE END Includes */
  27:Core/Src/main.cpp **** 
  28:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.cpp **** 
  31:Core/Src/main.cpp **** /* USER CODE END PTD */
ARM GAS  /tmp/ccaS5fC6.s 			page 2


  32:Core/Src/main.cpp **** 
  33:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  35:Core/Src/main.cpp **** 
  36:Core/Src/main.cpp **** /* USER CODE END PD */
  37:Core/Src/main.cpp **** 
  38:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  40:Core/Src/main.cpp **** 
  41:Core/Src/main.cpp **** /* USER CODE END PM */
  42:Core/Src/main.cpp **** 
  43:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.cpp **** 
  45:Core/Src/main.cpp **** TIM_HandleTypeDef htim2;
  46:Core/Src/main.cpp **** 
  47:Core/Src/main.cpp **** /* Definitions for defaultTask */
  48:Core/Src/main.cpp **** osThreadId_t defaultTaskHandle;
  49:Core/Src/main.cpp **** const osThreadAttr_t defaultTask_attributes = {
  50:Core/Src/main.cpp ****   .name = "defaultTask",
  51:Core/Src/main.cpp ****   .stack_size = 128 * 4,
  52:Core/Src/main.cpp ****   .priority = (osPriority_t) osPriorityNormal,
  53:Core/Src/main.cpp **** };
  54:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  55:Core/Src/main.cpp **** 
  56:Core/Src/main.cpp **** /* USER CODE END PV */
  57:Core/Src/main.cpp **** 
  58:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.cpp **** void SystemClock_Config(void);
  60:Core/Src/main.cpp **** static void MX_GPIO_Init(void);
  61:Core/Src/main.cpp **** static void MX_TIM2_Init(void);
  62:Core/Src/main.cpp **** void StartDefaultTask(void *argument);
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.cpp **** 
  66:Core/Src/main.cpp **** /* USER CODE END PFP */
  67:Core/Src/main.cpp **** 
  68:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.cpp **** 
  71:Core/Src/main.cpp **** /* USER CODE END 0 */
  72:Core/Src/main.cpp **** 
  73:Core/Src/main.cpp **** /**
  74:Core/Src/main.cpp ****   * @brief  The application entry point.
  75:Core/Src/main.cpp ****   * @retval int
  76:Core/Src/main.cpp ****   */
  77:Core/Src/main.cpp **** int main(void)
  78:Core/Src/main.cpp **** {
  79:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.cpp ****   STM32LED::LED1= new STM32LED::LED(GPIOB, GPIO_PIN_0);
  81:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
  82:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
  83:Core/Src/main.cpp ****   /* USER CODE END 1 */
  84:Core/Src/main.cpp **** 
  85:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.cpp **** 
  87:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.cpp ****   HAL_Init();
ARM GAS  /tmp/ccaS5fC6.s 			page 3


  89:Core/Src/main.cpp **** 
  90:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  91:Core/Src/main.cpp **** 
  92:Core/Src/main.cpp ****   /* USER CODE END Init */
  93:Core/Src/main.cpp **** 
  94:Core/Src/main.cpp ****   /* Configure the system clock */
  95:Core/Src/main.cpp ****   SystemClock_Config();
  96:Core/Src/main.cpp **** 
  97:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.cpp **** 
  99:Core/Src/main.cpp ****   /* USER CODE END SysInit */
 100:Core/Src/main.cpp **** 
 101:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
 102:Core/Src/main.cpp ****   MX_GPIO_Init();
 103:Core/Src/main.cpp ****   MX_TIM2_Init();
 104:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.cpp ****   HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 106:Core/Src/main.cpp ****   /* USER CODE END 2 */
 107:Core/Src/main.cpp **** 
 108:Core/Src/main.cpp ****   /* Init scheduler */
 109:Core/Src/main.cpp ****   osKernelInitialize();
 110:Core/Src/main.cpp **** 
 111:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_MUTEX */
 112:Core/Src/main.cpp ****   /* add mutexes, ... */
 113:Core/Src/main.cpp ****   /* USER CODE END RTOS_MUTEX */
 114:Core/Src/main.cpp **** 
 115:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 116:Core/Src/main.cpp ****   /* add semaphores, ... */
 117:Core/Src/main.cpp ****   /* USER CODE END RTOS_SEMAPHORES */
 118:Core/Src/main.cpp **** 
 119:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_TIMERS */
 120:Core/Src/main.cpp ****     STM32LED::LED1->timer_init();
 121:Core/Src/main.cpp ****     STM32LED::LED2->timer_init();
 122:Core/Src/main.cpp ****     STM32LED::LED3->timer_init();
 123:Core/Src/main.cpp ****   /* start timers, add new ones, ... */
 124:Core/Src/main.cpp ****   /* USER CODE END RTOS_TIMERS */
 125:Core/Src/main.cpp **** 
 126:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_QUEUES */
 127:Core/Src/main.cpp ****   /* add queues, ... */
 128:Core/Src/main.cpp ****   /* USER CODE END RTOS_QUEUES */
 129:Core/Src/main.cpp **** 
 130:Core/Src/main.cpp ****   /* Create the thread(s) */
 131:Core/Src/main.cpp ****   /* creation of defaultTask */
 132:Core/Src/main.cpp ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 133:Core/Src/main.cpp **** 
 134:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_THREADS */
 135:Core/Src/main.cpp ****   /* add threads, ... */
 136:Core/Src/main.cpp ****   /* USER CODE END RTOS_THREADS */
 137:Core/Src/main.cpp **** 
 138:Core/Src/main.cpp ****   /* USER CODE BEGIN RTOS_EVENTS */
 139:Core/Src/main.cpp ****   /* add events, ... */
 140:Core/Src/main.cpp ****   STM32LED::setMode(STM32LED::state::blink);
 141:Core/Src/main.cpp ****   /* USER CODE END RTOS_EVENTS */
 142:Core/Src/main.cpp **** 
 143:Core/Src/main.cpp ****   /* Start scheduler */
 144:Core/Src/main.cpp ****   osKernelStart();
 145:Core/Src/main.cpp ****   /* We should never get here as control is now taken by the scheduler */
ARM GAS  /tmp/ccaS5fC6.s 			page 4


 146:Core/Src/main.cpp ****   /* Infinite loop */
 147:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 148:Core/Src/main.cpp ****   while (1)
 149:Core/Src/main.cpp ****   {
 150:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 151:Core/Src/main.cpp **** 
 152:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 153:Core/Src/main.cpp ****   }
 154:Core/Src/main.cpp ****   /* USER CODE END 3 */
 155:Core/Src/main.cpp **** }
 156:Core/Src/main.cpp **** 
 157:Core/Src/main.cpp **** /**
 158:Core/Src/main.cpp ****   * @brief System Clock Configuration
 159:Core/Src/main.cpp ****   * @retval None
 160:Core/Src/main.cpp ****   */
 161:Core/Src/main.cpp **** void SystemClock_Config(void)
 162:Core/Src/main.cpp **** {
 163:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 164:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 165:Core/Src/main.cpp **** 
 166:Core/Src/main.cpp ****   /** Supply configuration update enable
 167:Core/Src/main.cpp ****   */
 168:Core/Src/main.cpp ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 169:Core/Src/main.cpp **** 
 170:Core/Src/main.cpp ****   /** Configure the main internal regulator output voltage
 171:Core/Src/main.cpp ****   */
 172:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 173:Core/Src/main.cpp **** 
 174:Core/Src/main.cpp ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 175:Core/Src/main.cpp **** 
 176:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 177:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 178:Core/Src/main.cpp ****   */
 179:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 180:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 181:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 182:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 183:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 8;
 184:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 256;
 185:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = 2;
 186:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 187:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = 2;
 188:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
 189:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 190:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 191:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Core/Src/main.cpp ****   {
 193:Core/Src/main.cpp ****     Error_Handler();
 194:Core/Src/main.cpp ****   }
 195:Core/Src/main.cpp **** 
 196:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 197:Core/Src/main.cpp ****   */
 198:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 199:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 200:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 201:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 202:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccaS5fC6.s 			page 5


 203:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 204:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 205:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 206:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 207:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 208:Core/Src/main.cpp **** 
 209:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 210:Core/Src/main.cpp ****   {
 211:Core/Src/main.cpp ****     Error_Handler();
 212:Core/Src/main.cpp ****   }
 213:Core/Src/main.cpp **** }
 214:Core/Src/main.cpp **** 
 215:Core/Src/main.cpp **** /**
 216:Core/Src/main.cpp ****   * @brief TIM2 Initialization Function
 217:Core/Src/main.cpp ****   * @param None
 218:Core/Src/main.cpp ****   * @retval None
 219:Core/Src/main.cpp ****   */
 220:Core/Src/main.cpp **** static void MX_TIM2_Init(void)
 221:Core/Src/main.cpp **** {
 222:Core/Src/main.cpp **** 
 223:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM2_Init 0 */
 224:Core/Src/main.cpp **** 
 225:Core/Src/main.cpp ****   /* USER CODE END TIM2_Init 0 */
 226:Core/Src/main.cpp **** 
 227:Core/Src/main.cpp ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 228:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 229:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 230:Core/Src/main.cpp **** 
 231:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM2_Init 1 */
 232:Core/Src/main.cpp **** 
 233:Core/Src/main.cpp ****   /* USER CODE END TIM2_Init 1 */
 234:Core/Src/main.cpp ****   htim2.Instance = TIM2;
 235:Core/Src/main.cpp ****   htim2.Init.Prescaler = 400;
 236:Core/Src/main.cpp ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 237:Core/Src/main.cpp ****   htim2.Init.Period = 1000;
 238:Core/Src/main.cpp ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 239:Core/Src/main.cpp ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 240:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 241:Core/Src/main.cpp ****   {
 242:Core/Src/main.cpp ****     Error_Handler();
 243:Core/Src/main.cpp ****   }
 244:Core/Src/main.cpp ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 245:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 246:Core/Src/main.cpp ****   {
 247:Core/Src/main.cpp ****     Error_Handler();
 248:Core/Src/main.cpp ****   }
 249:Core/Src/main.cpp ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 250:Core/Src/main.cpp ****   {
 251:Core/Src/main.cpp ****     Error_Handler();
 252:Core/Src/main.cpp ****   }
 253:Core/Src/main.cpp ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 254:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 255:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 256:Core/Src/main.cpp ****   {
 257:Core/Src/main.cpp ****     Error_Handler();
 258:Core/Src/main.cpp ****   }
 259:Core/Src/main.cpp ****   sConfigOC.OCMode = TIM_OCMODE_TOGGLE;
ARM GAS  /tmp/ccaS5fC6.s 			page 6


 260:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 261:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 262:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 263:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 264:Core/Src/main.cpp ****   {
 265:Core/Src/main.cpp ****     Error_Handler();
 266:Core/Src/main.cpp ****   }
 267:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM2_Init 2 */
 268:Core/Src/main.cpp **** 
 269:Core/Src/main.cpp ****   /* USER CODE END TIM2_Init 2 */
 270:Core/Src/main.cpp ****   HAL_TIM_MspPostInit(&htim2);
 271:Core/Src/main.cpp **** 
 272:Core/Src/main.cpp **** }
 273:Core/Src/main.cpp **** 
 274:Core/Src/main.cpp **** /**
 275:Core/Src/main.cpp ****   * @brief GPIO Initialization Function
 276:Core/Src/main.cpp ****   * @param None
 277:Core/Src/main.cpp ****   * @retval None
 278:Core/Src/main.cpp ****   */
 279:Core/Src/main.cpp **** static void MX_GPIO_Init(void)
 280:Core/Src/main.cpp **** {
  28              		.loc 1 280 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.save {r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41              		.pad #44
  42 0002 8BB0     		sub	sp, sp, #44
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 64
 281:Core/Src/main.cpp ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 281 3 view .LVU1
  46              		.loc 1 281 20 is_stmt 0 view .LVU2
  47 0004 0024     		movs	r4, #0
  48 0006 0594     		str	r4, [sp, #20]
  49 0008 0694     		str	r4, [sp, #24]
  50 000a 0794     		str	r4, [sp, #28]
  51 000c 0894     		str	r4, [sp, #32]
  52 000e 0994     		str	r4, [sp, #36]
 282:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 283:Core/Src/main.cpp **** /* USER CODE END MX_GPIO_Init_1 */
 284:Core/Src/main.cpp **** 
 285:Core/Src/main.cpp ****   /* GPIO Ports Clock Enable */
 286:Core/Src/main.cpp ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 286 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 286 3 view .LVU4
  56              		.loc 1 286 3 view .LVU5
  57 0010 2F4B     		ldr	r3, .L3
ARM GAS  /tmp/ccaS5fC6.s 			page 7


  58 0012 D3F8E020 		ldr	r2, [r3, #224]
  59 0016 42F00402 		orr	r2, r2, #4
  60 001a C3F8E020 		str	r2, [r3, #224]
  61              		.loc 1 286 3 view .LVU6
  62 001e D3F8E020 		ldr	r2, [r3, #224]
  63 0022 02F00402 		and	r2, r2, #4
  64 0026 0092     		str	r2, [sp]
  65              		.loc 1 286 3 view .LVU7
  66 0028 009A     		ldr	r2, [sp]
  67              	.LBE4:
 287:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  68              		.loc 1 287 3 view .LVU8
  69              	.LBB5:
  70              		.loc 1 287 3 view .LVU9
  71              		.loc 1 287 3 view .LVU10
  72 002a D3F8E020 		ldr	r2, [r3, #224]
  73 002e 42F08002 		orr	r2, r2, #128
  74 0032 C3F8E020 		str	r2, [r3, #224]
  75              		.loc 1 287 3 view .LVU11
  76 0036 D3F8E020 		ldr	r2, [r3, #224]
  77 003a 02F08002 		and	r2, r2, #128
  78 003e 0192     		str	r2, [sp, #4]
  79              		.loc 1 287 3 view .LVU12
  80 0040 019A     		ldr	r2, [sp, #4]
  81              	.LBE5:
 288:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 288 3 view .LVU13
  83              	.LBB6:
  84              		.loc 1 288 3 view .LVU14
  85              		.loc 1 288 3 view .LVU15
  86 0042 D3F8E020 		ldr	r2, [r3, #224]
  87 0046 42F00102 		orr	r2, r2, #1
  88 004a C3F8E020 		str	r2, [r3, #224]
  89              		.loc 1 288 3 view .LVU16
  90 004e D3F8E020 		ldr	r2, [r3, #224]
  91 0052 02F00102 		and	r2, r2, #1
  92 0056 0292     		str	r2, [sp, #8]
  93              		.loc 1 288 3 view .LVU17
  94 0058 029A     		ldr	r2, [sp, #8]
  95              	.LBE6:
 289:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  96              		.loc 1 289 3 view .LVU18
  97              	.LBB7:
  98              		.loc 1 289 3 view .LVU19
  99              		.loc 1 289 3 view .LVU20
 100 005a D3F8E020 		ldr	r2, [r3, #224]
 101 005e 42F00202 		orr	r2, r2, #2
 102 0062 C3F8E020 		str	r2, [r3, #224]
 103              		.loc 1 289 3 view .LVU21
 104 0066 D3F8E020 		ldr	r2, [r3, #224]
 105 006a 02F00202 		and	r2, r2, #2
 106 006e 0392     		str	r2, [sp, #12]
 107              		.loc 1 289 3 view .LVU22
 108 0070 039A     		ldr	r2, [sp, #12]
 109              	.LBE7:
 290:Core/Src/main.cpp ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 110              		.loc 1 290 3 view .LVU23
ARM GAS  /tmp/ccaS5fC6.s 			page 8


 111              	.LBB8:
 112              		.loc 1 290 3 view .LVU24
 113              		.loc 1 290 3 view .LVU25
 114 0072 D3F8E020 		ldr	r2, [r3, #224]
 115 0076 42F01002 		orr	r2, r2, #16
 116 007a C3F8E020 		str	r2, [r3, #224]
 117              		.loc 1 290 3 view .LVU26
 118 007e D3F8E030 		ldr	r3, [r3, #224]
 119 0082 03F01003 		and	r3, r3, #16
 120 0086 0493     		str	r3, [sp, #16]
 121              		.loc 1 290 3 view .LVU27
 122 0088 049B     		ldr	r3, [sp, #16]
 123              	.LBE8:
 291:Core/Src/main.cpp **** 
 292:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 293:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOB, LED1_Pin|LED3_Pin, GPIO_PIN_RESET);
 124              		.loc 1 293 3 view .LVU28
 125              		.loc 1 293 20 is_stmt 0 view .LVU29
 126 008a 124F     		ldr	r7, .L3+4
 127 008c 2246     		mov	r2, r4
 128 008e 44F20101 		movw	r1, #16385
 129 0092 3846     		mov	r0, r7
 130 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL0:
 294:Core/Src/main.cpp **** 
 295:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 296:Core/Src/main.cpp ****   HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 132              		.loc 1 296 3 is_stmt 1 view .LVU30
 133              		.loc 1 296 20 is_stmt 0 view .LVU31
 134 0098 0F4D     		ldr	r5, .L3+8
 135 009a 2246     		mov	r2, r4
 136 009c 0221     		movs	r1, #2
 137 009e 2846     		mov	r0, r5
 138 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 139              	.LVL1:
 297:Core/Src/main.cpp **** 
 298:Core/Src/main.cpp ****   /*Configure GPIO pins : LED1_Pin LED3_Pin */
 299:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = LED1_Pin|LED3_Pin;
 140              		.loc 1 299 3 is_stmt 1 view .LVU32
 141              		.loc 1 299 23 is_stmt 0 view .LVU33
 142 00a4 44F20103 		movw	r3, #16385
 143 00a8 0593     		str	r3, [sp, #20]
 300:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 144              		.loc 1 300 3 is_stmt 1 view .LVU34
 145              		.loc 1 300 24 is_stmt 0 view .LVU35
 146 00aa 0126     		movs	r6, #1
 147 00ac 0696     		str	r6, [sp, #24]
 301:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 148              		.loc 1 301 3 is_stmt 1 view .LVU36
 149              		.loc 1 301 24 is_stmt 0 view .LVU37
 150 00ae 0794     		str	r4, [sp, #28]
 302:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 151              		.loc 1 302 3 is_stmt 1 view .LVU38
 152              		.loc 1 302 25 is_stmt 0 view .LVU39
 153 00b0 0894     		str	r4, [sp, #32]
 303:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 154              		.loc 1 303 3 is_stmt 1 view .LVU40
ARM GAS  /tmp/ccaS5fC6.s 			page 9


 155              		.loc 1 303 16 is_stmt 0 view .LVU41
 156 00b2 05A9     		add	r1, sp, #20
 157 00b4 3846     		mov	r0, r7
 158 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL2:
 304:Core/Src/main.cpp **** 
 305:Core/Src/main.cpp ****   /*Configure GPIO pin : LED2_Pin */
 306:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = LED2_Pin;
 160              		.loc 1 306 3 is_stmt 1 view .LVU42
 161              		.loc 1 306 23 is_stmt 0 view .LVU43
 162 00ba 0223     		movs	r3, #2
 163 00bc 0593     		str	r3, [sp, #20]
 307:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 307 3 is_stmt 1 view .LVU44
 165              		.loc 1 307 24 is_stmt 0 view .LVU45
 166 00be 0696     		str	r6, [sp, #24]
 308:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 167              		.loc 1 308 3 is_stmt 1 view .LVU46
 168              		.loc 1 308 24 is_stmt 0 view .LVU47
 169 00c0 0794     		str	r4, [sp, #28]
 309:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 170              		.loc 1 309 3 is_stmt 1 view .LVU48
 171              		.loc 1 309 25 is_stmt 0 view .LVU49
 172 00c2 0894     		str	r4, [sp, #32]
 310:Core/Src/main.cpp ****   HAL_GPIO_Init(LED2_GPIO_Port, &GPIO_InitStruct);
 173              		.loc 1 310 3 is_stmt 1 view .LVU50
 174              		.loc 1 310 16 is_stmt 0 view .LVU51
 175 00c4 05A9     		add	r1, sp, #20
 176 00c6 2846     		mov	r0, r5
 177 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL3:
 311:Core/Src/main.cpp **** 
 312:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 313:Core/Src/main.cpp **** /* USER CODE END MX_GPIO_Init_2 */
 314:Core/Src/main.cpp **** }
 179              		.loc 1 314 1 view .LVU52
 180 00cc 0BB0     		add	sp, sp, #44
 181              	.LCFI2:
 182              		.cfi_def_cfa_offset 20
 183              		@ sp needed
 184 00ce F0BD     		pop	{r4, r5, r6, r7, pc}
 185              	.L4:
 186              		.align	2
 187              	.L3:
 188 00d0 00440258 		.word	1476543488
 189 00d4 00040258 		.word	1476527104
 190 00d8 00100258 		.word	1476530176
 191              		.cfi_endproc
 192              	.LFE1039:
 193              		.fnend
 195              		.section	.text._Z16StartDefaultTaskPv,"ax",%progbits
 196              		.align	1
 197              		.global	_Z16StartDefaultTaskPv
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv5-d16
ARM GAS  /tmp/ccaS5fC6.s 			page 10


 203              	_Z16StartDefaultTaskPv:
 204              		.fnstart
 205              	.LFB1040:
 315:Core/Src/main.cpp **** 
 316:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 317:Core/Src/main.cpp **** 
 318:Core/Src/main.cpp **** /* USER CODE END 4 */
 319:Core/Src/main.cpp **** 
 320:Core/Src/main.cpp **** /* USER CODE BEGIN Header_StartDefaultTask */
 321:Core/Src/main.cpp **** /**
 322:Core/Src/main.cpp ****   * @brief  Function implementing the defaultTask thread.
 323:Core/Src/main.cpp ****   * @param  argument: Not used
 324:Core/Src/main.cpp ****   * @retval None
 325:Core/Src/main.cpp ****   */
 326:Core/Src/main.cpp **** /* USER CODE END Header_StartDefaultTask */
 327:Core/Src/main.cpp **** void StartDefaultTask(void *argument)
 328:Core/Src/main.cpp **** {
 206              		.loc 1 328 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL4:
 211              		.loc 1 328 1 is_stmt 0 view .LVU54
 212 0000 08B5     		push	{r3, lr}
 213              		.save {r3, lr}
 214              	.LCFI3:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 218              	.LVL5:
 219              	.L6:
 329:Core/Src/main.cpp ****   /* USER CODE BEGIN 5 */
 330:Core/Src/main.cpp ****   /* Infinite loop */
 331:Core/Src/main.cpp ****   for(;;)
 220              		.loc 1 331 3 is_stmt 1 discriminator 1 view .LVU55
 332:Core/Src/main.cpp ****   {
 333:Core/Src/main.cpp ****     // STM32LED:: LED1 -> toggle();
 334:Core/Src/main.cpp ****     // osDelay(5);
 335:Core/Src/main.cpp ****     // __HAL_TIM_SET_AUTORELOAD(&htim2, 1);
 336:Core/Src/main.cpp ****     // STM32LED:: LED2 -> toggle();
 337:Core/Src/main.cpp ****     // osDelay(5);
 338:Core/Src/main.cpp ****     // STM32LED:: LED3 -> toggle();
 339:Core/Src/main.cpp ****     // __HAL_TIM_SET_AUTORELOAD(&htim2, 1000);
 340:Core/Src/main.cpp ****      osDelay(5);
 221              		.loc 1 340 6 discriminator 1 view .LVU56
 222              		.loc 1 340 13 is_stmt 0 discriminator 1 view .LVU57
 223 0002 0520     		movs	r0, #5
 224 0004 FFF7FEFF 		bl	osDelay
 225              	.LVL6:
 331:Core/Src/main.cpp ****   {
 226              		.loc 1 331 3 is_stmt 1 discriminator 1 view .LVU58
 227 0008 FBE7     		b	.L6
 228              		.cfi_endproc
 229              	.LFE1040:
 230              		.fnend
 232              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 233              		.align	1
ARM GAS  /tmp/ccaS5fC6.s 			page 11


 234              		.global	HAL_TIM_PeriodElapsedCallback
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv5-d16
 240              	HAL_TIM_PeriodElapsedCallback:
 241              		.fnstart
 242              	.LVL7:
 243              	.LFB1041:
 341:Core/Src/main.cpp ****   }
 342:Core/Src/main.cpp ****   /* USER CODE END 5 */
 343:Core/Src/main.cpp **** }
 344:Core/Src/main.cpp **** 
 345:Core/Src/main.cpp **** /**
 346:Core/Src/main.cpp ****   * @brief  Period elapsed callback in non blocking mode
 347:Core/Src/main.cpp ****   * @note   This function is called  when TIM1 interrupt took place, inside
 348:Core/Src/main.cpp ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 349:Core/Src/main.cpp ****   * a global variable "uwTick" used as application time base.
 350:Core/Src/main.cpp ****   * @param  htim : TIM handle
 351:Core/Src/main.cpp ****   * @retval None
 352:Core/Src/main.cpp ****   */
 353:Core/Src/main.cpp **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 354:Core/Src/main.cpp **** {
 244              		.loc 1 354 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		.loc 1 354 1 is_stmt 0 view .LVU60
 249 0000 08B5     		push	{r3, lr}
 250              		.save {r3, lr}
 251              	.LCFI4:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 355:Core/Src/main.cpp ****   /* USER CODE BEGIN Callback 0 */
 356:Core/Src/main.cpp **** 
 357:Core/Src/main.cpp ****   /* USER CODE END Callback 0 */
 358:Core/Src/main.cpp ****   if (htim->Instance == TIM1) {
 255              		.loc 1 358 3 is_stmt 1 view .LVU61
 256              		.loc 1 358 13 is_stmt 0 view .LVU62
 257 0002 0268     		ldr	r2, [r0]
 258              		.loc 1 358 3 view .LVU63
 259 0004 034B     		ldr	r3, .L12
 260 0006 9A42     		cmp	r2, r3
 261 0008 00D0     		beq	.L11
 262              	.LVL8:
 263              	.L8:
 359:Core/Src/main.cpp ****     HAL_IncTick();
 360:Core/Src/main.cpp ****   }
 361:Core/Src/main.cpp ****   /* USER CODE BEGIN Callback 1 */
 362:Core/Src/main.cpp **** 
 363:Core/Src/main.cpp ****   /* USER CODE END Callback 1 */
 364:Core/Src/main.cpp **** }
 264              		.loc 1 364 1 view .LVU64
 265 000a 08BD     		pop	{r3, pc}
 266              	.LVL9:
 267              	.L11:
ARM GAS  /tmp/ccaS5fC6.s 			page 12


 359:Core/Src/main.cpp ****     HAL_IncTick();
 268              		.loc 1 359 5 is_stmt 1 view .LVU65
 359:Core/Src/main.cpp ****     HAL_IncTick();
 269              		.loc 1 359 16 is_stmt 0 view .LVU66
 270 000c FFF7FEFF 		bl	HAL_IncTick
 271              	.LVL10:
 272              		.loc 1 364 1 view .LVU67
 273 0010 FBE7     		b	.L8
 274              	.L13:
 275 0012 00BF     		.align	2
 276              	.L12:
 277 0014 00000140 		.word	1073807360
 278              		.cfi_endproc
 279              	.LFE1041:
 280              		.fnend
 282              		.section	.text.Error_Handler,"ax",%progbits
 283              		.align	1
 284              		.global	Error_Handler
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv5-d16
 290              	Error_Handler:
 291              		.fnstart
 292              	.LFB1042:
 365:Core/Src/main.cpp **** 
 366:Core/Src/main.cpp **** /**
 367:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 368:Core/Src/main.cpp ****   * @retval None
 369:Core/Src/main.cpp ****   */
 370:Core/Src/main.cpp **** void Error_Handler(void)
 371:Core/Src/main.cpp **** {
 293              		.loc 1 371 1 is_stmt 1 view -0
 294              		.cfi_startproc
 295              		@ Volatile: function does not return.
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 372:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 373:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 374:Core/Src/main.cpp ****   __disable_irq();
 299              		.loc 1 374 3 view .LVU69
 300              	.LBB9:
 301              	.LBI9:
 302              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  /tmp/ccaS5fC6.s 			page 13


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccaS5fC6.s 			page 14


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
ARM GAS  /tmp/ccaS5fC6.s 			page 15


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccaS5fC6.s 			page 16


 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 303              		.loc 2 207 27 view .LVU70
 304              	.LBB10:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 305              		.loc 2 209 3 view .LVU71
 306              		.loc 2 209 44 is_stmt 0 view .LVU72
 307              		.syntax unified
 308              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 309 0000 72B6     		cpsid i
 310              	@ 0 "" 2
 311              		.thumb
 312              		.syntax unified
 313              	.L15:
 314              	.LBE10:
 315              	.LBE9:
 375:Core/Src/main.cpp ****   while (1)
 316              		.loc 1 375 3 is_stmt 1 discriminator 1 view .LVU73
 317              		.loc 1 375 3 discriminator 1 view .LVU74
 318 0002 FEE7     		b	.L15
 319              		.cfi_endproc
 320              	.LFE1042:
 321              		.cantunwind
 322              		.fnend
 324              		.section	.text._ZL12MX_TIM2_Initv,"ax",%progbits
 325              		.align	1
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv5-d16
 331              	_ZL12MX_TIM2_Initv:
 332              		.fnstart
 333              	.LFB1038:
 221:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccaS5fC6.s 			page 17


 334              		.loc 1 221 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 56
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 00B5     		push	{lr}
 339              		.save {lr}
 340              	.LCFI5:
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 14, -4
 343              		.pad #60
 344 0002 8FB0     		sub	sp, sp, #60
 345              	.LCFI6:
 346              		.cfi_def_cfa_offset 64
 227:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 347              		.loc 1 227 3 view .LVU76
 227:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 348              		.loc 1 227 26 is_stmt 0 view .LVU77
 349 0004 0023     		movs	r3, #0
 350 0006 0A93     		str	r3, [sp, #40]
 351 0008 0B93     		str	r3, [sp, #44]
 352 000a 0C93     		str	r3, [sp, #48]
 353 000c 0D93     		str	r3, [sp, #52]
 228:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 354              		.loc 1 228 3 is_stmt 1 view .LVU78
 228:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 355              		.loc 1 228 27 is_stmt 0 view .LVU79
 356 000e 0793     		str	r3, [sp, #28]
 357 0010 0893     		str	r3, [sp, #32]
 358 0012 0993     		str	r3, [sp, #36]
 229:Core/Src/main.cpp **** 
 359              		.loc 1 229 3 is_stmt 1 view .LVU80
 229:Core/Src/main.cpp **** 
 360              		.loc 1 229 22 is_stmt 0 view .LVU81
 361 0014 0093     		str	r3, [sp]
 362 0016 0193     		str	r3, [sp, #4]
 363 0018 0293     		str	r3, [sp, #8]
 364 001a 0393     		str	r3, [sp, #12]
 365 001c 0493     		str	r3, [sp, #16]
 366 001e 0593     		str	r3, [sp, #20]
 367 0020 0693     		str	r3, [sp, #24]
 234:Core/Src/main.cpp ****   htim2.Init.Prescaler = 400;
 368              		.loc 1 234 3 is_stmt 1 view .LVU82
 234:Core/Src/main.cpp ****   htim2.Init.Prescaler = 400;
 369              		.loc 1 234 18 is_stmt 0 view .LVU83
 370 0022 2048     		ldr	r0, .L28
 371 0024 4FF08042 		mov	r2, #1073741824
 372 0028 0260     		str	r2, [r0]
 235:Core/Src/main.cpp ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 373              		.loc 1 235 3 is_stmt 1 view .LVU84
 235:Core/Src/main.cpp ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 374              		.loc 1 235 24 is_stmt 0 view .LVU85
 375 002a 4FF4C872 		mov	r2, #400
 376 002e 4260     		str	r2, [r0, #4]
 236:Core/Src/main.cpp ****   htim2.Init.Period = 1000;
 377              		.loc 1 236 3 is_stmt 1 view .LVU86
 236:Core/Src/main.cpp ****   htim2.Init.Period = 1000;
 378              		.loc 1 236 26 is_stmt 0 view .LVU87
ARM GAS  /tmp/ccaS5fC6.s 			page 18


 379 0030 8360     		str	r3, [r0, #8]
 237:Core/Src/main.cpp ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 380              		.loc 1 237 3 is_stmt 1 view .LVU88
 237:Core/Src/main.cpp ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 381              		.loc 1 237 21 is_stmt 0 view .LVU89
 382 0032 4FF47A72 		mov	r2, #1000
 383 0036 C260     		str	r2, [r0, #12]
 238:Core/Src/main.cpp ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 384              		.loc 1 238 3 is_stmt 1 view .LVU90
 238:Core/Src/main.cpp ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 385              		.loc 1 238 28 is_stmt 0 view .LVU91
 386 0038 0361     		str	r3, [r0, #16]
 239:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 387              		.loc 1 239 3 is_stmt 1 view .LVU92
 239:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 388              		.loc 1 239 32 is_stmt 0 view .LVU93
 389 003a 8023     		movs	r3, #128
 390 003c 8361     		str	r3, [r0, #24]
 240:Core/Src/main.cpp ****   {
 391              		.loc 1 240 3 is_stmt 1 view .LVU94
 240:Core/Src/main.cpp ****   {
 392              		.loc 1 240 24 is_stmt 0 view .LVU95
 393 003e FFF7FEFF 		bl	HAL_TIM_Base_Init
 394              	.LVL11:
 240:Core/Src/main.cpp ****   {
 395              		.loc 1 240 3 view .LVU96
 396 0042 20BB     		cbnz	r0, .L23
 244:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 397              		.loc 1 244 3 is_stmt 1 view .LVU97
 244:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 398              		.loc 1 244 34 is_stmt 0 view .LVU98
 399 0044 4FF48053 		mov	r3, #4096
 400 0048 0A93     		str	r3, [sp, #40]
 245:Core/Src/main.cpp ****   {
 401              		.loc 1 245 3 is_stmt 1 view .LVU99
 245:Core/Src/main.cpp ****   {
 402              		.loc 1 245 32 is_stmt 0 view .LVU100
 403 004a 0AA9     		add	r1, sp, #40
 404 004c 1548     		ldr	r0, .L28
 405 004e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 406              	.LVL12:
 245:Core/Src/main.cpp ****   {
 407              		.loc 1 245 3 view .LVU101
 408 0052 F0B9     		cbnz	r0, .L24
 249:Core/Src/main.cpp ****   {
 409              		.loc 1 249 3 is_stmt 1 view .LVU102
 249:Core/Src/main.cpp ****   {
 410              		.loc 1 249 22 is_stmt 0 view .LVU103
 411 0054 1348     		ldr	r0, .L28
 412 0056 FFF7FEFF 		bl	HAL_TIM_OC_Init
 413              	.LVL13:
 249:Core/Src/main.cpp ****   {
 414              		.loc 1 249 3 view .LVU104
 415 005a E0B9     		cbnz	r0, .L25
 253:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 416              		.loc 1 253 3 is_stmt 1 view .LVU105
 253:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/ccaS5fC6.s 			page 19


 417              		.loc 1 253 37 is_stmt 0 view .LVU106
 418 005c 0023     		movs	r3, #0
 419 005e 0793     		str	r3, [sp, #28]
 254:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 420              		.loc 1 254 3 is_stmt 1 view .LVU107
 254:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 421              		.loc 1 254 33 is_stmt 0 view .LVU108
 422 0060 0993     		str	r3, [sp, #36]
 255:Core/Src/main.cpp ****   {
 423              		.loc 1 255 3 is_stmt 1 view .LVU109
 255:Core/Src/main.cpp ****   {
 424              		.loc 1 255 44 is_stmt 0 view .LVU110
 425 0062 07A9     		add	r1, sp, #28
 426 0064 0F48     		ldr	r0, .L28
 427 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 428              	.LVL14:
 255:Core/Src/main.cpp ****   {
 429              		.loc 1 255 3 view .LVU111
 430 006a B0B9     		cbnz	r0, .L26
 259:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 431              		.loc 1 259 3 is_stmt 1 view .LVU112
 259:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 432              		.loc 1 259 20 is_stmt 0 view .LVU113
 433 006c 3023     		movs	r3, #48
 434 006e 0093     		str	r3, [sp]
 260:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 435              		.loc 1 260 3 is_stmt 1 view .LVU114
 260:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 436              		.loc 1 260 19 is_stmt 0 view .LVU115
 437 0070 0022     		movs	r2, #0
 438 0072 0192     		str	r2, [sp, #4]
 261:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 439              		.loc 1 261 3 is_stmt 1 view .LVU116
 261:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 440              		.loc 1 261 24 is_stmt 0 view .LVU117
 441 0074 0292     		str	r2, [sp, #8]
 262:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 442              		.loc 1 262 3 is_stmt 1 view .LVU118
 262:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 443              		.loc 1 262 24 is_stmt 0 view .LVU119
 444 0076 0492     		str	r2, [sp, #16]
 263:Core/Src/main.cpp ****   {
 445              		.loc 1 263 3 is_stmt 1 view .LVU120
 263:Core/Src/main.cpp ****   {
 446              		.loc 1 263 31 is_stmt 0 view .LVU121
 447 0078 6946     		mov	r1, sp
 448 007a 0A48     		ldr	r0, .L28
 449 007c FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 450              	.LVL15:
 263:Core/Src/main.cpp ****   {
 451              		.loc 1 263 3 view .LVU122
 452 0080 68B9     		cbnz	r0, .L27
 270:Core/Src/main.cpp **** 
 453              		.loc 1 270 3 is_stmt 1 view .LVU123
 270:Core/Src/main.cpp **** 
 454              		.loc 1 270 22 is_stmt 0 view .LVU124
 455 0082 0848     		ldr	r0, .L28
ARM GAS  /tmp/ccaS5fC6.s 			page 20


 456 0084 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 457              	.LVL16:
 272:Core/Src/main.cpp **** 
 458              		.loc 1 272 1 view .LVU125
 459 0088 0FB0     		add	sp, sp, #60
 460              	.LCFI7:
 461              		.cfi_remember_state
 462              		.cfi_def_cfa_offset 4
 463              		@ sp needed
 464 008a 5DF804FB 		ldr	pc, [sp], #4
 465              	.L23:
 466              	.LCFI8:
 467              		.cfi_restore_state
 242:Core/Src/main.cpp ****   }
 468              		.loc 1 242 5 is_stmt 1 view .LVU126
 242:Core/Src/main.cpp ****   }
 469              		.loc 1 242 18 is_stmt 0 view .LVU127
 470 008e FFF7FEFF 		bl	Error_Handler
 471              	.LVL17:
 472              	.L24:
 247:Core/Src/main.cpp ****   }
 473              		.loc 1 247 5 is_stmt 1 view .LVU128
 247:Core/Src/main.cpp ****   }
 474              		.loc 1 247 18 is_stmt 0 view .LVU129
 475 0092 FFF7FEFF 		bl	Error_Handler
 476              	.LVL18:
 477              	.L25:
 251:Core/Src/main.cpp ****   }
 478              		.loc 1 251 5 is_stmt 1 view .LVU130
 251:Core/Src/main.cpp ****   }
 479              		.loc 1 251 18 is_stmt 0 view .LVU131
 480 0096 FFF7FEFF 		bl	Error_Handler
 481              	.LVL19:
 482              	.L26:
 257:Core/Src/main.cpp ****   }
 483              		.loc 1 257 5 is_stmt 1 view .LVU132
 257:Core/Src/main.cpp ****   }
 484              		.loc 1 257 18 is_stmt 0 view .LVU133
 485 009a FFF7FEFF 		bl	Error_Handler
 486              	.LVL20:
 487              	.L27:
 265:Core/Src/main.cpp ****   }
 488              		.loc 1 265 5 is_stmt 1 view .LVU134
 265:Core/Src/main.cpp ****   }
 489              		.loc 1 265 18 is_stmt 0 view .LVU135
 490 009e FFF7FEFF 		bl	Error_Handler
 491              	.LVL21:
 492              	.L29:
 493 00a2 00BF     		.align	2
 494              	.L28:
 495 00a4 00000000 		.word	.LANCHOR0
 496              		.cfi_endproc
 497              	.LFE1038:
 498              		.fnend
 500              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
 501              		.align	1
 502              		.global	_Z18SystemClock_Configv
ARM GAS  /tmp/ccaS5fC6.s 			page 21


 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 506              		.fpu fpv5-d16
 508              	_Z18SystemClock_Configv:
 509              		.fnstart
 510              	.LFB1037:
 162:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 511              		.loc 1 162 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 112
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515 0000 00B5     		push	{lr}
 516              		.save {lr}
 517              	.LCFI9:
 518              		.cfi_def_cfa_offset 4
 519              		.cfi_offset 14, -4
 520              		.pad #116
 521 0002 9DB0     		sub	sp, sp, #116
 522              	.LCFI10:
 523              		.cfi_def_cfa_offset 120
 163:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 524              		.loc 1 163 3 view .LVU137
 163:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 525              		.loc 1 163 22 is_stmt 0 view .LVU138
 526 0004 4C22     		movs	r2, #76
 527 0006 0021     		movs	r1, #0
 528 0008 09A8     		add	r0, sp, #36
 529 000a FFF7FEFF 		bl	memset
 530              	.LVL22:
 164:Core/Src/main.cpp **** 
 531              		.loc 1 164 3 is_stmt 1 view .LVU139
 164:Core/Src/main.cpp **** 
 532              		.loc 1 164 22 is_stmt 0 view .LVU140
 533 000e 2022     		movs	r2, #32
 534 0010 0021     		movs	r1, #0
 535 0012 01A8     		add	r0, sp, #4
 536 0014 FFF7FEFF 		bl	memset
 537              	.LVL23:
 168:Core/Src/main.cpp **** 
 538              		.loc 1 168 3 is_stmt 1 view .LVU141
 168:Core/Src/main.cpp **** 
 539              		.loc 1 168 25 is_stmt 0 view .LVU142
 540 0018 0220     		movs	r0, #2
 541 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 542              	.LVL24:
 172:Core/Src/main.cpp **** 
 543              		.loc 1 172 3 is_stmt 1 view .LVU143
 544              	.LBB11:
 172:Core/Src/main.cpp **** 
 545              		.loc 1 172 3 view .LVU144
 546 001e 0023     		movs	r3, #0
 547 0020 0093     		str	r3, [sp]
 172:Core/Src/main.cpp **** 
 548              		.loc 1 172 3 view .LVU145
 549 0022 214B     		ldr	r3, .L37
 550 0024 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccaS5fC6.s 			page 22


 551 0026 42F44042 		orr	r2, r2, #49152
 552 002a 9A61     		str	r2, [r3, #24]
 172:Core/Src/main.cpp **** 
 553              		.loc 1 172 3 view .LVU146
 554 002c 9B69     		ldr	r3, [r3, #24]
 555 002e 03F44043 		and	r3, r3, #49152
 556 0032 0093     		str	r3, [sp]
 172:Core/Src/main.cpp **** 
 557              		.loc 1 172 3 view .LVU147
 558 0034 009B     		ldr	r3, [sp]
 559              	.L31:
 560              	.LBE11:
 174:Core/Src/main.cpp **** 
 561              		.loc 1 174 3 view .LVU148
 174:Core/Src/main.cpp **** 
 562              		.loc 1 174 9 view .LVU149
 174:Core/Src/main.cpp **** 
 563              		.loc 1 174 10 is_stmt 0 view .LVU150
 564 0036 1C4B     		ldr	r3, .L37
 565 0038 9B69     		ldr	r3, [r3, #24]
 174:Core/Src/main.cpp **** 
 566              		.loc 1 174 9 view .LVU151
 567 003a 13F4005F 		tst	r3, #8192
 568 003e FAD0     		beq	.L31
 179:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 569              		.loc 1 179 3 is_stmt 1 view .LVU152
 179:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 570              		.loc 1 179 36 is_stmt 0 view .LVU153
 571 0040 0123     		movs	r3, #1
 572 0042 0993     		str	r3, [sp, #36]
 180:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 573              		.loc 1 180 3 is_stmt 1 view .LVU154
 180:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 574              		.loc 1 180 30 is_stmt 0 view .LVU155
 575 0044 4FF48033 		mov	r3, #65536
 576 0048 0A93     		str	r3, [sp, #40]
 181:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 577              		.loc 1 181 3 is_stmt 1 view .LVU156
 181:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 578              		.loc 1 181 34 is_stmt 0 view .LVU157
 579 004a 0223     		movs	r3, #2
 580 004c 1293     		str	r3, [sp, #72]
 182:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 8;
 581              		.loc 1 182 3 is_stmt 1 view .LVU158
 182:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 8;
 582              		.loc 1 182 35 is_stmt 0 view .LVU159
 583 004e 1393     		str	r3, [sp, #76]
 183:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 256;
 584              		.loc 1 183 3 is_stmt 1 view .LVU160
 183:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 256;
 585              		.loc 1 183 30 is_stmt 0 view .LVU161
 586 0050 0822     		movs	r2, #8
 587 0052 1492     		str	r2, [sp, #80]
 184:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = 2;
 588              		.loc 1 184 3 is_stmt 1 view .LVU162
 184:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = 2;
 589              		.loc 1 184 30 is_stmt 0 view .LVU163
ARM GAS  /tmp/ccaS5fC6.s 			page 23


 590 0054 4FF48072 		mov	r2, #256
 591 0058 1592     		str	r2, [sp, #84]
 185:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 592              		.loc 1 185 3 is_stmt 1 view .LVU164
 185:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 593              		.loc 1 185 30 is_stmt 0 view .LVU165
 594 005a 1693     		str	r3, [sp, #88]
 186:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = 2;
 595              		.loc 1 186 3 is_stmt 1 view .LVU166
 186:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = 2;
 596              		.loc 1 186 30 is_stmt 0 view .LVU167
 597 005c 1793     		str	r3, [sp, #92]
 187:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
 598              		.loc 1 187 3 is_stmt 1 view .LVU168
 187:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
 599              		.loc 1 187 30 is_stmt 0 view .LVU169
 600 005e 1893     		str	r3, [sp, #96]
 188:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 601              		.loc 1 188 3 is_stmt 1 view .LVU170
 188:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 602              		.loc 1 188 32 is_stmt 0 view .LVU171
 603 0060 0423     		movs	r3, #4
 604 0062 1993     		str	r3, [sp, #100]
 189:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 605              		.loc 1 189 3 is_stmt 1 view .LVU172
 189:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 606              		.loc 1 189 35 is_stmt 0 view .LVU173
 607 0064 0023     		movs	r3, #0
 608 0066 1A93     		str	r3, [sp, #104]
 190:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 609              		.loc 1 190 3 is_stmt 1 view .LVU174
 190:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 610              		.loc 1 190 34 is_stmt 0 view .LVU175
 611 0068 1B93     		str	r3, [sp, #108]
 191:Core/Src/main.cpp ****   {
 612              		.loc 1 191 3 is_stmt 1 view .LVU176
 191:Core/Src/main.cpp ****   {
 613              		.loc 1 191 24 is_stmt 0 view .LVU177
 614 006a 09A8     		add	r0, sp, #36
 615 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 616              	.LVL25:
 191:Core/Src/main.cpp ****   {
 617              		.loc 1 191 3 view .LVU178
 618 0070 B0B9     		cbnz	r0, .L35
 198:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 619              		.loc 1 198 3 is_stmt 1 view .LVU179
 198:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 620              		.loc 1 198 31 is_stmt 0 view .LVU180
 621 0072 3F23     		movs	r3, #63
 622 0074 0193     		str	r3, [sp, #4]
 201:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 623              		.loc 1 201 3 is_stmt 1 view .LVU181
 201:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 624              		.loc 1 201 34 is_stmt 0 view .LVU182
 625 0076 0323     		movs	r3, #3
 626 0078 0293     		str	r3, [sp, #8]
 202:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccaS5fC6.s 			page 24


 627              		.loc 1 202 3 is_stmt 1 view .LVU183
 202:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 628              		.loc 1 202 35 is_stmt 0 view .LVU184
 629 007a 0023     		movs	r3, #0
 630 007c 0393     		str	r3, [sp, #12]
 203:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 631              		.loc 1 203 3 is_stmt 1 view .LVU185
 203:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 632              		.loc 1 203 35 is_stmt 0 view .LVU186
 633 007e 0823     		movs	r3, #8
 634 0080 0493     		str	r3, [sp, #16]
 204:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 635              		.loc 1 204 3 is_stmt 1 view .LVU187
 204:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 636              		.loc 1 204 36 is_stmt 0 view .LVU188
 637 0082 4023     		movs	r3, #64
 638 0084 0593     		str	r3, [sp, #20]
 205:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 639              		.loc 1 205 3 is_stmt 1 view .LVU189
 205:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 640              		.loc 1 205 36 is_stmt 0 view .LVU190
 641 0086 0693     		str	r3, [sp, #24]
 206:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 642              		.loc 1 206 3 is_stmt 1 view .LVU191
 206:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 643              		.loc 1 206 36 is_stmt 0 view .LVU192
 644 0088 4FF48062 		mov	r2, #1024
 645 008c 0792     		str	r2, [sp, #28]
 207:Core/Src/main.cpp **** 
 646              		.loc 1 207 3 is_stmt 1 view .LVU193
 207:Core/Src/main.cpp **** 
 647              		.loc 1 207 36 is_stmt 0 view .LVU194
 648 008e 0893     		str	r3, [sp, #32]
 209:Core/Src/main.cpp ****   {
 649              		.loc 1 209 3 is_stmt 1 view .LVU195
 209:Core/Src/main.cpp ****   {
 650              		.loc 1 209 26 is_stmt 0 view .LVU196
 651 0090 0221     		movs	r1, #2
 652 0092 01A8     		add	r0, sp, #4
 653 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 654              	.LVL26:
 209:Core/Src/main.cpp ****   {
 655              		.loc 1 209 3 view .LVU197
 656 0098 20B9     		cbnz	r0, .L36
 213:Core/Src/main.cpp **** 
 657              		.loc 1 213 1 view .LVU198
 658 009a 1DB0     		add	sp, sp, #116
 659              	.LCFI11:
 660              		.cfi_remember_state
 661              		.cfi_def_cfa_offset 4
 662              		@ sp needed
 663 009c 5DF804FB 		ldr	pc, [sp], #4
 664              	.L35:
 665              	.LCFI12:
 666              		.cfi_restore_state
 193:Core/Src/main.cpp ****   }
 667              		.loc 1 193 5 is_stmt 1 view .LVU199
ARM GAS  /tmp/ccaS5fC6.s 			page 25


 193:Core/Src/main.cpp ****   }
 668              		.loc 1 193 18 is_stmt 0 view .LVU200
 669 00a0 FFF7FEFF 		bl	Error_Handler
 670              	.LVL27:
 671              	.L36:
 211:Core/Src/main.cpp ****   }
 672              		.loc 1 211 5 is_stmt 1 view .LVU201
 211:Core/Src/main.cpp ****   }
 673              		.loc 1 211 18 is_stmt 0 view .LVU202
 674 00a4 FFF7FEFF 		bl	Error_Handler
 675              	.LVL28:
 676              	.L38:
 677              		.align	2
 678              	.L37:
 679 00a8 00480258 		.word	1476544512
 680              		.cfi_endproc
 681              	.LFE1037:
 682              		.fnend
 684              		.section	.text.main,"ax",%progbits
 685              		.align	1
 686              		.global	main
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 690              		.fpu fpv5-d16
 692              	main:
 693              		.fnstart
 694              	.LFB1036:
  78:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 695              		.loc 1 78 1 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699 0000 38B5     		push	{r3, r4, r5, lr}
 700              		.save {r3, r4, r5, lr}
 701              	.LCFI13:
 702              		.cfi_def_cfa_offset 16
 703              		.cfi_offset 3, -16
 704              		.cfi_offset 4, -12
 705              		.cfi_offset 5, -8
 706              		.cfi_offset 14, -4
  80:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
 707              		.loc 1 80 3 view .LVU204
  80:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
 708              		.loc 1 80 54 is_stmt 0 view .LVU205
 709 0002 1420     		movs	r0, #20
 710              	.LEHB0:
 711 0004 FFF7FEFF 		bl	_Znwj
 712              	.LVL29:
 713              	.LEHE0:
 714 0008 0446     		mov	r4, r0
 715 000a 0122     		movs	r2, #1
 716 000c 2849     		ldr	r1, .L48
 717              	.LEHB1:
 718 000e FFF7FEFF 		bl	_ZN8STM32LED3LEDC1EP12GPIO_TypeDeft
 719              	.LVL30:
 720              	.LEHE1:
ARM GAS  /tmp/ccaS5fC6.s 			page 26


  80:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
 721              		.loc 1 80 17 discriminator 2 view .LVU206
 722 0012 284B     		ldr	r3, .L48+4
 723 0014 1C60     		str	r4, [r3]
  81:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
 724              		.loc 1 81 3 is_stmt 1 discriminator 2 view .LVU207
  81:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
 725              		.loc 1 81 54 is_stmt 0 discriminator 2 view .LVU208
 726 0016 1420     		movs	r0, #20
 727              	.LEHB2:
 728 0018 FFF7FEFF 		bl	_Znwj
 729              	.LVL31:
 730              	.LEHE2:
 731 001c 0446     		mov	r4, r0
 732 001e 0222     		movs	r2, #2
 733 0020 2549     		ldr	r1, .L48+8
 734              	.LEHB3:
 735 0022 FFF7FEFF 		bl	_ZN8STM32LED3LEDC1EP12GPIO_TypeDeft
 736              	.LVL32:
 737              	.LEHE3:
  81:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
 738              		.loc 1 81 17 discriminator 2 view .LVU209
 739 0026 254B     		ldr	r3, .L48+12
 740 0028 1C60     		str	r4, [r3]
  82:Core/Src/main.cpp ****   /* USER CODE END 1 */
 741              		.loc 1 82 3 is_stmt 1 discriminator 2 view .LVU210
  82:Core/Src/main.cpp ****   /* USER CODE END 1 */
 742              		.loc 1 82 55 is_stmt 0 discriminator 2 view .LVU211
 743 002a 1420     		movs	r0, #20
 744              	.LEHB4:
 745 002c FFF7FEFF 		bl	_Znwj
 746              	.LVL33:
 747              	.LEHE4:
 748 0030 0446     		mov	r4, r0
 749 0032 4FF48042 		mov	r2, #16384
 750 0036 1E49     		ldr	r1, .L48
 751              	.LEHB5:
 752 0038 FFF7FEFF 		bl	_ZN8STM32LED3LEDC1EP12GPIO_TypeDeft
 753              	.LVL34:
 754              	.LEHE5:
  82:Core/Src/main.cpp ****   /* USER CODE END 1 */
 755              		.loc 1 82 17 discriminator 2 view .LVU212
 756 003c 204D     		ldr	r5, .L48+16
 757 003e 2C60     		str	r4, [r5]
  88:Core/Src/main.cpp **** 
 758              		.loc 1 88 3 is_stmt 1 discriminator 2 view .LVU213
 759              	.LEHB6:
  88:Core/Src/main.cpp **** 
 760              		.loc 1 88 11 is_stmt 0 discriminator 2 view .LVU214
 761 0040 FFF7FEFF 		bl	HAL_Init
 762              	.LVL35:
  95:Core/Src/main.cpp **** 
 763              		.loc 1 95 3 is_stmt 1 discriminator 2 view .LVU215
  95:Core/Src/main.cpp **** 
 764              		.loc 1 95 21 is_stmt 0 discriminator 2 view .LVU216
 765 0044 FFF7FEFF 		bl	_Z18SystemClock_Configv
 766              	.LVL36:
ARM GAS  /tmp/ccaS5fC6.s 			page 27


 102:Core/Src/main.cpp ****   MX_TIM2_Init();
 767              		.loc 1 102 3 is_stmt 1 discriminator 2 view .LVU217
 102:Core/Src/main.cpp ****   MX_TIM2_Init();
 768              		.loc 1 102 15 is_stmt 0 discriminator 2 view .LVU218
 769 0048 FFF7FEFF 		bl	_ZL12MX_GPIO_Initv
 770              	.LVL37:
 103:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 771              		.loc 1 103 3 is_stmt 1 discriminator 2 view .LVU219
 103:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 772              		.loc 1 103 15 is_stmt 0 discriminator 2 view .LVU220
 773 004c FFF7FEFF 		bl	_ZL12MX_TIM2_Initv
 774              	.LVL38:
 105:Core/Src/main.cpp ****   /* USER CODE END 2 */
 775              		.loc 1 105 3 is_stmt 1 discriminator 2 view .LVU221
 105:Core/Src/main.cpp ****   /* USER CODE END 2 */
 776              		.loc 1 105 19 is_stmt 0 discriminator 2 view .LVU222
 777 0050 0021     		movs	r1, #0
 778 0052 1C48     		ldr	r0, .L48+20
 779 0054 FFF7FEFF 		bl	HAL_TIM_OC_Start
 780              	.LVL39:
 109:Core/Src/main.cpp **** 
 781              		.loc 1 109 3 is_stmt 1 discriminator 2 view .LVU223
 109:Core/Src/main.cpp **** 
 782              		.loc 1 109 21 is_stmt 0 discriminator 2 view .LVU224
 783 0058 FFF7FEFF 		bl	osKernelInitialize
 784              	.LVL40:
 120:Core/Src/main.cpp ****     STM32LED::LED2->timer_init();
 785              		.loc 1 120 5 is_stmt 1 discriminator 2 view .LVU225
 120:Core/Src/main.cpp ****     STM32LED::LED2->timer_init();
 786              		.loc 1 120 31 is_stmt 0 discriminator 2 view .LVU226
 787 005c 154B     		ldr	r3, .L48+4
 788 005e 1868     		ldr	r0, [r3]
 789 0060 FFF7FEFF 		bl	_ZN8STM32LED3LED10timer_initEv
 790              	.LVL41:
 121:Core/Src/main.cpp ****     STM32LED::LED3->timer_init();
 791              		.loc 1 121 5 is_stmt 1 discriminator 2 view .LVU227
 121:Core/Src/main.cpp ****     STM32LED::LED3->timer_init();
 792              		.loc 1 121 31 is_stmt 0 discriminator 2 view .LVU228
 793 0064 154B     		ldr	r3, .L48+12
 794 0066 1868     		ldr	r0, [r3]
 795 0068 FFF7FEFF 		bl	_ZN8STM32LED3LED10timer_initEv
 796              	.LVL42:
 122:Core/Src/main.cpp ****   /* start timers, add new ones, ... */
 797              		.loc 1 122 5 is_stmt 1 discriminator 2 view .LVU229
 122:Core/Src/main.cpp ****   /* start timers, add new ones, ... */
 798              		.loc 1 122 31 is_stmt 0 discriminator 2 view .LVU230
 799 006c 2868     		ldr	r0, [r5]
 800 006e FFF7FEFF 		bl	_ZN8STM32LED3LED10timer_initEv
 801              	.LVL43:
 132:Core/Src/main.cpp **** 
 802              		.loc 1 132 3 is_stmt 1 discriminator 2 view .LVU231
 132:Core/Src/main.cpp **** 
 803              		.loc 1 132 34 is_stmt 0 discriminator 2 view .LVU232
 804 0072 154A     		ldr	r2, .L48+24
 805 0074 0021     		movs	r1, #0
 806 0076 1548     		ldr	r0, .L48+28
 807 0078 FFF7FEFF 		bl	osThreadNew
ARM GAS  /tmp/ccaS5fC6.s 			page 28


 808              	.LVL44:
 132:Core/Src/main.cpp **** 
 809              		.loc 1 132 21 discriminator 2 view .LVU233
 810 007c 144B     		ldr	r3, .L48+32
 811 007e 1860     		str	r0, [r3]
 140:Core/Src/main.cpp ****   /* USER CODE END RTOS_EVENTS */
 812              		.loc 1 140 3 is_stmt 1 discriminator 2 view .LVU234
 140:Core/Src/main.cpp ****   /* USER CODE END RTOS_EVENTS */
 813              		.loc 1 140 20 is_stmt 0 discriminator 2 view .LVU235
 814 0080 0220     		movs	r0, #2
 815 0082 FFF7FEFF 		bl	_ZN8STM32LED7setModeENS_5stateE
 816              	.LVL45:
 144:Core/Src/main.cpp ****   /* We should never get here as control is now taken by the scheduler */
 817              		.loc 1 144 3 is_stmt 1 discriminator 2 view .LVU236
 144:Core/Src/main.cpp ****   /* We should never get here as control is now taken by the scheduler */
 818              		.loc 1 144 16 is_stmt 0 discriminator 2 view .LVU237
 819 0086 FFF7FEFF 		bl	osKernelStart
 820              	.LVL46:
 821              	.L40:
 148:Core/Src/main.cpp ****   {
 822              		.loc 1 148 3 is_stmt 1 discriminator 1 view .LVU238
 148:Core/Src/main.cpp ****   {
 823              		.loc 1 148 3 discriminator 1 view .LVU239
 824 008a FEE7     		b	.L40
 825              	.L44:
  80:Core/Src/main.cpp ****   STM32LED::LED2= new STM32LED::LED(GPIOE, GPIO_PIN_1);
 826              		.loc 1 80 54 is_stmt 0 view .LVU240
 827 008c 1421     		movs	r1, #20
 828 008e 2046     		mov	r0, r4
 829 0090 FFF7FEFF 		bl	_ZdlPvj
 830              	.LVL47:
 831 0094 FFF7FEFF 		bl	__cxa_end_cleanup
 832              	.LVL48:
 833              	.L45:
  81:Core/Src/main.cpp ****   STM32LED::LED3= new STM32LED::LED(GPIOB, GPIO_PIN_14);
 834              		.loc 1 81 54 view .LVU241
 835 0098 1421     		movs	r1, #20
 836 009a 2046     		mov	r0, r4
 837 009c FFF7FEFF 		bl	_ZdlPvj
 838              	.LVL49:
 839 00a0 FFF7FEFF 		bl	__cxa_end_cleanup
 840              	.LVL50:
 841              	.L46:
  82:Core/Src/main.cpp ****   /* USER CODE END 1 */
 842              		.loc 1 82 55 view .LVU242
 843 00a4 1421     		movs	r1, #20
 844 00a6 2046     		mov	r0, r4
 845 00a8 FFF7FEFF 		bl	_ZdlPvj
 846              	.LVL51:
 847 00ac FFF7FEFF 		bl	__cxa_end_cleanup
 848              	.LVL52:
 849              	.LEHE6:
 850              	.L49:
 851              		.align	2
 852              	.L48:
 853 00b0 00040258 		.word	1476527104
 854 00b4 00000000 		.word	_ZN8STM32LED4LED1E
ARM GAS  /tmp/ccaS5fC6.s 			page 29


 855 00b8 00100258 		.word	1476530176
 856 00bc 00000000 		.word	_ZN8STM32LED4LED2E
 857 00c0 00000000 		.word	_ZN8STM32LED4LED3E
 858 00c4 00000000 		.word	.LANCHOR0
 859 00c8 00000000 		.word	.LANCHOR1
 860 00cc 00000000 		.word	_Z16StartDefaultTaskPv
 861 00d0 00000000 		.word	.LANCHOR2
 862              		.cfi_endproc
 863              	.LFE1036:
 864              		.global	__gxx_personality_v0
 865              		.personality	__gxx_personality_v0
 866              		.handlerdata
 867              	.LLSDA1036:
 868 0008 FF       		.byte	0xff
 869 0009 FF       		.byte	0xff
 870 000a 01       		.byte	0x1
 871 000b 1F       		.uleb128 .LLSDACSE1036-.LLSDACSB1036
 872              	.LLSDACSB1036:
 873 000c 04       		.uleb128 .LEHB0-.LFB1036
 874 000d 04       		.uleb128 .LEHE0-.LEHB0
 875 000e 00       		.uleb128 0
 876 000f 00       		.uleb128 0
 877 0010 0E       		.uleb128 .LEHB1-.LFB1036
 878 0011 04       		.uleb128 .LEHE1-.LEHB1
 879 0012 8C01     		.uleb128 .L44-.LFB1036
 880 0014 00       		.uleb128 0
 881 0015 18       		.uleb128 .LEHB2-.LFB1036
 882 0016 04       		.uleb128 .LEHE2-.LEHB2
 883 0017 00       		.uleb128 0
 884 0018 00       		.uleb128 0
 885 0019 22       		.uleb128 .LEHB3-.LFB1036
 886 001a 04       		.uleb128 .LEHE3-.LEHB3
 887 001b 9801     		.uleb128 .L45-.LFB1036
 888 001d 00       		.uleb128 0
 889 001e 2C       		.uleb128 .LEHB4-.LFB1036
 890 001f 04       		.uleb128 .LEHE4-.LEHB4
 891 0020 00       		.uleb128 0
 892 0021 00       		.uleb128 0
 893 0022 38       		.uleb128 .LEHB5-.LFB1036
 894 0023 04       		.uleb128 .LEHE5-.LEHB5
 895 0024 A401     		.uleb128 .L46-.LFB1036
 896 0026 00       		.uleb128 0
 897 0027 40       		.uleb128 .LEHB6-.LFB1036
 898 0028 70       		.uleb128 .LEHE6-.LEHB6
 899 0029 00       		.uleb128 0
 900 002a 00       		.uleb128 0
 901              	.LLSDACSE1036:
 902              		.section	.text.main
 903              		.fnend
 905              		.section	.rodata.str1.4,"aMS",%progbits,1
 906              		.align	2
 907              	.LC0:
 908 0000 64656661 		.ascii	"defaultTask\000"
 908      756C7454 
 908      61736B00 
 909              		.global	defaultTaskHandle
 910              		.global	htim2
ARM GAS  /tmp/ccaS5fC6.s 			page 30


 911              		.section	.bss.defaultTaskHandle,"aw",%nobits
 912              		.align	2
 913              		.set	.LANCHOR2,. + 0
 916              	defaultTaskHandle:
 917 0000 00000000 		.space	4
 918              		.section	.bss.htim2,"aw",%nobits
 919              		.align	2
 920              		.set	.LANCHOR0,. + 0
 923              	htim2:
 924 0000 00000000 		.space	76
 924      00000000 
 924      00000000 
 924      00000000 
 924      00000000 
 925              		.section	.rodata._ZL22defaultTask_attributes,"a"
 926              		.align	2
 927              		.set	.LANCHOR1,. + 0
 930              	_ZL22defaultTask_attributes:
 931 0000 00000000 		.word	.LC0
 932 0004 00000000 		.space	16
 932      00000000 
 932      00000000 
 932      00000000 
 933 0014 00020000 		.word	512
 934 0018 18000000 		.word	24
 935 001c 00000000 		.space	8
 935      00000000 
 936              		.text
 937              	.Letext0:
 938              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 939              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 940              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 941              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h733xx.h"
 942              		.file 7 "/usr/include/newlib/c++/9.2.1/cmath"
 943              		.file 8 "/usr/include/newlib/c++/9.2.1/type_traits"
 944              		.file 9 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 945              		.file 10 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 946              		.file 11 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 947              		.file 12 "/usr/include/newlib/c++/9.2.1/limits"
 948              		.file 13 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 949              		.file 14 "/usr/include/newlib/c++/9.2.1/tr1/special_function_util.h"
 950              		.file 15 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 951              		.file 16 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 952              		.file 17 "/usr/include/newlib/sys/_types.h"
 953              		.file 18 "/usr/include/newlib/sys/reent.h"
 954              		.file 19 "/usr/include/newlib/sys/lock.h"
 955              		.file 20 "/usr/include/newlib/math.h"
 956              		.file 21 "/usr/include/newlib/c++/9.2.1/math.h"
 957              		.file 22 "/usr/include/newlib/stdlib.h"
 958              		.file 23 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 959              		.file 24 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 960              		.file 25 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 961              		.file 26 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 962              		.file 27 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 963              		.file 28 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 964              		.file 29 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 965              		.file 30 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  /tmp/ccaS5fC6.s 			page 31


 966              		.file 31 "Modules/Inc/LED.h"
 967              		.file 32 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim_ex.h"
 968              		.file 33 "Core/Inc/main.h"
 969              		.file 34 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 970              		.file 35 "<built-in>"
ARM GAS  /tmp/ccaS5fC6.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccaS5fC6.s:17     .text._ZL12MX_GPIO_Initv:0000000000000000 $t
     /tmp/ccaS5fC6.s:24     .text._ZL12MX_GPIO_Initv:0000000000000000 _ZL12MX_GPIO_Initv
     /tmp/ccaS5fC6.s:188    .text._ZL12MX_GPIO_Initv:00000000000000d0 $d
.ARM.exidx.text._ZL12MX_GPIO_Initv:0000000000000000 $d
     /tmp/ccaS5fC6.s:196    .text._Z16StartDefaultTaskPv:0000000000000000 $t
     /tmp/ccaS5fC6.s:203    .text._Z16StartDefaultTaskPv:0000000000000000 _Z16StartDefaultTaskPv
.ARM.extab.text._Z16StartDefaultTaskPv:0000000000000000 $d
.ARM.exidx.text._Z16StartDefaultTaskPv:0000000000000000 $d
     /tmp/ccaS5fC6.s:233    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccaS5fC6.s:240    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccaS5fC6.s:277    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
.ARM.extab.text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $d
.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $d
     /tmp/ccaS5fC6.s:283    .text.Error_Handler:0000000000000000 $t
     /tmp/ccaS5fC6.s:290    .text.Error_Handler:0000000000000000 Error_Handler
    .ARM.exidx.text.Error_Handler:0000000000000000 $d
     /tmp/ccaS5fC6.s:325    .text._ZL12MX_TIM2_Initv:0000000000000000 $t
     /tmp/ccaS5fC6.s:331    .text._ZL12MX_TIM2_Initv:0000000000000000 _ZL12MX_TIM2_Initv
     /tmp/ccaS5fC6.s:495    .text._ZL12MX_TIM2_Initv:00000000000000a4 $d
.ARM.exidx.text._ZL12MX_TIM2_Initv:0000000000000000 $d
     /tmp/ccaS5fC6.s:501    .text._Z18SystemClock_Configv:0000000000000000 $t
     /tmp/ccaS5fC6.s:508    .text._Z18SystemClock_Configv:0000000000000000 _Z18SystemClock_Configv
     /tmp/ccaS5fC6.s:679    .text._Z18SystemClock_Configv:00000000000000a8 $d
.ARM.exidx.text._Z18SystemClock_Configv:0000000000000000 $d
     /tmp/ccaS5fC6.s:685    .text.main:0000000000000000 $t
     /tmp/ccaS5fC6.s:692    .text.main:0000000000000000 main
     /tmp/ccaS5fC6.s:853    .text.main:00000000000000b0 $d
             .ARM.extab.text.main:0000000000000000 $d
             .ARM.exidx.text.main:0000000000000000 $d
     /tmp/ccaS5fC6.s:906    .rodata.str1.4:0000000000000000 $d
     /tmp/ccaS5fC6.s:916    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccaS5fC6.s:923    .bss.htim2:0000000000000000 htim2
     /tmp/ccaS5fC6.s:912    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccaS5fC6.s:919    .bss.htim2:0000000000000000 $d
     /tmp/ccaS5fC6.s:926    .rodata._ZL22defaultTask_attributes:0000000000000000 $d
     /tmp/ccaS5fC6.s:930    .rodata._ZL22defaultTask_attributes:0000000000000000 _ZL22defaultTask_attributes

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_unwind_cpp_pr0
osDelay
__aeabi_unwind_cpp_pr1
HAL_IncTick
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
_Znwj
ARM GAS  /tmp/ccaS5fC6.s 			page 33


_ZN8STM32LED3LEDC1EP12GPIO_TypeDeft
HAL_Init
HAL_TIM_OC_Start
osKernelInitialize
_ZN8STM32LED3LED10timer_initEv
osThreadNew
_ZN8STM32LED7setModeENS_5stateE
osKernelStart
_ZdlPvj
__cxa_end_cleanup
_ZN8STM32LED4LED1E
_ZN8STM32LED4LED2E
_ZN8STM32LED4LED3E
__gxx_personality_v0
