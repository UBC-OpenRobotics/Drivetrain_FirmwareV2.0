ARM GAS  /tmp/ccvePDTV.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system_stm32h7xx.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemInit,"ax",%progbits
  17              		.align	1
  18              		.global	SystemInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	SystemInit:
  26              	.LFB144:
  27              		.file 1 "Core/Src/system_stm32h7xx.c"
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Core/Src/system_stm32h7xx.c ****   *
  13:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32h7xx.c ****   *
  17:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32h7xx.c ****   *
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32h7xx.c ****   * @attention
  24:Core/Src/system_stm32h7xx.c ****   *
  25:Core/Src/system_stm32h7xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  26:Core/Src/system_stm32h7xx.c ****   * All rights reserved.
  27:Core/Src/system_stm32h7xx.c ****   *
  28:Core/Src/system_stm32h7xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Core/Src/system_stm32h7xx.c ****   * in the root directory of this software component.
  30:Core/Src/system_stm32h7xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  31:Core/Src/system_stm32h7xx.c ****   *
ARM GAS  /tmp/ccvePDTV.s 			page 2


  32:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  33:Core/Src/system_stm32h7xx.c ****   */
  34:Core/Src/system_stm32h7xx.c **** 
  35:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  36:Core/Src/system_stm32h7xx.c ****   * @{
  37:Core/Src/system_stm32h7xx.c ****   */
  38:Core/Src/system_stm32h7xx.c **** 
  39:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  40:Core/Src/system_stm32h7xx.c ****   * @{
  41:Core/Src/system_stm32h7xx.c ****   */
  42:Core/Src/system_stm32h7xx.c **** 
  43:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  44:Core/Src/system_stm32h7xx.c ****   * @{
  45:Core/Src/system_stm32h7xx.c ****   */
  46:Core/Src/system_stm32h7xx.c **** 
  47:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  48:Core/Src/system_stm32h7xx.c **** #include <math.h>
  49:Core/Src/system_stm32h7xx.c **** 
  50:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  51:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  52:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  53:Core/Src/system_stm32h7xx.c **** 
  54:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  55:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  56:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  57:Core/Src/system_stm32h7xx.c **** 
  58:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  59:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  60:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  61:Core/Src/system_stm32h7xx.c **** 
  62:Core/Src/system_stm32h7xx.c **** 
  63:Core/Src/system_stm32h7xx.c **** /**
  64:Core/Src/system_stm32h7xx.c ****   * @}
  65:Core/Src/system_stm32h7xx.c ****   */
  66:Core/Src/system_stm32h7xx.c **** 
  67:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  68:Core/Src/system_stm32h7xx.c ****   * @{
  69:Core/Src/system_stm32h7xx.c ****   */
  70:Core/Src/system_stm32h7xx.c **** 
  71:Core/Src/system_stm32h7xx.c **** /**
  72:Core/Src/system_stm32h7xx.c ****   * @}
  73:Core/Src/system_stm32h7xx.c ****   */
  74:Core/Src/system_stm32h7xx.c **** 
  75:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  76:Core/Src/system_stm32h7xx.c ****   * @{
  77:Core/Src/system_stm32h7xx.c ****   */
  78:Core/Src/system_stm32h7xx.c **** 
  79:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  80:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  81:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  82:Core/Src/system_stm32h7xx.c **** 
  83:Core/Src/system_stm32h7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  84:Core/Src/system_stm32h7xx.c ****          configuration. */
  85:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  86:Core/Src/system_stm32h7xx.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  87:Core/Src/system_stm32h7xx.c ****      remap of boot address selected */
  88:Core/Src/system_stm32h7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
ARM GAS  /tmp/ccvePDTV.s 			page 3


  89:Core/Src/system_stm32h7xx.c **** 
  90:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  91:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
  92:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  93:Core/Src/system_stm32h7xx.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  94:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  95:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
  96:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
  97:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
  98:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
  99:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 100:Core/Src/system_stm32h7xx.c **** #else
 101:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 102:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 103:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 104:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 105:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 106:Core/Src/system_stm32h7xx.c **** #else
 107:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 108:Core/Src/system_stm32h7xx.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 109:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 110:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 111:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 112:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 113:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 114:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 115:Core/Src/system_stm32h7xx.c **** #else
 116:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 117:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 118:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 119:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 120:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 121:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 122:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 123:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
 124:Core/Src/system_stm32h7xx.c **** 
 125:Core/Src/system_stm32h7xx.c **** /**
 126:Core/Src/system_stm32h7xx.c ****   * @}
 127:Core/Src/system_stm32h7xx.c ****   */
 128:Core/Src/system_stm32h7xx.c **** 
 129:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 130:Core/Src/system_stm32h7xx.c ****   * @{
 131:Core/Src/system_stm32h7xx.c ****   */
 132:Core/Src/system_stm32h7xx.c **** 
 133:Core/Src/system_stm32h7xx.c **** /**
 134:Core/Src/system_stm32h7xx.c ****   * @}
 135:Core/Src/system_stm32h7xx.c ****   */
 136:Core/Src/system_stm32h7xx.c **** 
 137:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 138:Core/Src/system_stm32h7xx.c ****   * @{
 139:Core/Src/system_stm32h7xx.c ****   */
 140:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 141:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 142:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 143:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 144:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 145:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
ARM GAS  /tmp/ccvePDTV.s 			page 4


 146:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
 147:Core/Src/system_stm32h7xx.c ****   */
 148:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 149:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 150:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 151:Core/Src/system_stm32h7xx.c **** 
 152:Core/Src/system_stm32h7xx.c **** /**
 153:Core/Src/system_stm32h7xx.c ****   * @}
 154:Core/Src/system_stm32h7xx.c ****   */
 155:Core/Src/system_stm32h7xx.c **** 
 156:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 157:Core/Src/system_stm32h7xx.c ****   * @{
 158:Core/Src/system_stm32h7xx.c ****   */
 159:Core/Src/system_stm32h7xx.c **** 
 160:Core/Src/system_stm32h7xx.c **** /**
 161:Core/Src/system_stm32h7xx.c ****   * @}
 162:Core/Src/system_stm32h7xx.c ****   */
 163:Core/Src/system_stm32h7xx.c **** 
 164:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 165:Core/Src/system_stm32h7xx.c ****   * @{
 166:Core/Src/system_stm32h7xx.c ****   */
 167:Core/Src/system_stm32h7xx.c **** 
 168:Core/Src/system_stm32h7xx.c **** /**
 169:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 170:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 171:Core/Src/system_stm32h7xx.c ****   *         configuration.
 172:Core/Src/system_stm32h7xx.c ****   * @param  None
 173:Core/Src/system_stm32h7xx.c ****   * @retval None
 174:Core/Src/system_stm32h7xx.c ****   */
 175:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 176:Core/Src/system_stm32h7xx.c **** {
  28              		.loc 1 176 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 177:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 178:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 179:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 180:Core/Src/system_stm32h7xx.c **** 
 181:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 182:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 183:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 183 5 view .LVU1
  34              		.loc 1 183 16 is_stmt 0 view .LVU2
  35 0000 224A     		ldr	r2, .L4
  36 0002 D2F88830 		ldr	r3, [r2, #136]
  37 0006 43F47003 		orr	r3, r3, #15728640
  38 000a C2F88830 		str	r3, [r2, #136]
 184:Core/Src/system_stm32h7xx.c ****   #endif
 185:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 186:Core/Src/system_stm32h7xx.c **** 
 187:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 188:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  39              		.loc 1 188 3 is_stmt 1 view .LVU3
  40              		.loc 1 188 32 is_stmt 0 view .LVU4
  41 000e 204B     		ldr	r3, .L4+4
ARM GAS  /tmp/ccvePDTV.s 			page 5


  42 0010 1B68     		ldr	r3, [r3]
  43 0012 03F00F03 		and	r3, r3, #15
  44              		.loc 1 188 5 view .LVU5
  45 0016 062B     		cmp	r3, #6
  46 0018 06D8     		bhi	.L2
 189:Core/Src/system_stm32h7xx.c ****   {
 190:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 191:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  47              		.loc 1 191 5 is_stmt 1 view .LVU6
  48 001a 1D4A     		ldr	r2, .L4+4
  49 001c 1368     		ldr	r3, [r2]
  50 001e 23F00F03 		bic	r3, r3, #15
  51 0022 43F00703 		orr	r3, r3, #7
  52 0026 1360     		str	r3, [r2]
  53              	.L2:
 192:Core/Src/system_stm32h7xx.c ****   }
 193:Core/Src/system_stm32h7xx.c **** 
 194:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 195:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  54              		.loc 1 195 3 view .LVU7
  55              		.loc 1 195 11 is_stmt 0 view .LVU8
  56 0028 1A4B     		ldr	r3, .L4+8
  57 002a 1A68     		ldr	r2, [r3]
  58 002c 42F00102 		orr	r2, r2, #1
  59 0030 1A60     		str	r2, [r3]
 196:Core/Src/system_stm32h7xx.c **** 
 197:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 198:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  60              		.loc 1 198 3 is_stmt 1 view .LVU9
  61              		.loc 1 198 13 is_stmt 0 view .LVU10
  62 0032 0022     		movs	r2, #0
  63 0034 1A61     		str	r2, [r3, #16]
 199:Core/Src/system_stm32h7xx.c **** 
 200:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 201:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  64              		.loc 1 201 3 is_stmt 1 view .LVU11
  65              		.loc 1 201 11 is_stmt 0 view .LVU12
  66 0036 1968     		ldr	r1, [r3]
  67 0038 174A     		ldr	r2, .L4+12
  68 003a 0A40     		ands	r2, r2, r1
  69 003c 1A60     		str	r2, [r3]
 202:Core/Src/system_stm32h7xx.c **** 
 203:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 204:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  70              		.loc 1 204 3 is_stmt 1 view .LVU13
  71              		.loc 1 204 32 is_stmt 0 view .LVU14
  72 003e 144B     		ldr	r3, .L4+4
  73 0040 1B68     		ldr	r3, [r3]
  74              		.loc 1 204 5 view .LVU15
  75 0042 13F0080F 		tst	r3, #8
  76 0046 06D0     		beq	.L3
 205:Core/Src/system_stm32h7xx.c ****   {
 206:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 207:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  77              		.loc 1 207 5 is_stmt 1 view .LVU16
  78 0048 114A     		ldr	r2, .L4+4
  79 004a 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccvePDTV.s 			page 6


  80 004c 23F00F03 		bic	r3, r3, #15
  81 0050 43F00703 		orr	r3, r3, #7
  82 0054 1360     		str	r3, [r2]
  83              	.L3:
 208:Core/Src/system_stm32h7xx.c ****   }
 209:Core/Src/system_stm32h7xx.c **** 
 210:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 211:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 212:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
  84              		.loc 1 212 3 view .LVU17
  85              		.loc 1 212 15 is_stmt 0 view .LVU18
  86 0056 0F4B     		ldr	r3, .L4+8
  87 0058 0022     		movs	r2, #0
  88 005a 9A61     		str	r2, [r3, #24]
 213:Core/Src/system_stm32h7xx.c **** 
 214:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 215:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
  89              		.loc 1 215 3 is_stmt 1 view .LVU19
  90              		.loc 1 215 15 is_stmt 0 view .LVU20
  91 005c DA61     		str	r2, [r3, #28]
 216:Core/Src/system_stm32h7xx.c **** 
 217:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 218:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
  92              		.loc 1 218 3 is_stmt 1 view .LVU21
  93              		.loc 1 218 15 is_stmt 0 view .LVU22
  94 005e 1A62     		str	r2, [r3, #32]
 219:Core/Src/system_stm32h7xx.c **** #else
 220:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 221:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 222:Core/Src/system_stm32h7xx.c **** 
 223:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 224:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 225:Core/Src/system_stm32h7xx.c **** 
 226:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 227:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 228:Core/Src/system_stm32h7xx.c **** #endif
 229:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 230:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
  95              		.loc 1 230 3 is_stmt 1 view .LVU23
  96              		.loc 1 230 18 is_stmt 0 view .LVU24
  97 0060 0E49     		ldr	r1, .L4+16
  98 0062 9962     		str	r1, [r3, #40]
 231:Core/Src/system_stm32h7xx.c **** 
 232:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 233:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
  99              		.loc 1 233 3 is_stmt 1 view .LVU25
 100              		.loc 1 233 16 is_stmt 0 view .LVU26
 101 0064 0E49     		ldr	r1, .L4+20
 102 0066 D962     		str	r1, [r3, #44]
 234:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 235:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
 103              		.loc 1 235 3 is_stmt 1 view .LVU27
 104              		.loc 1 235 17 is_stmt 0 view .LVU28
 105 0068 0E49     		ldr	r1, .L4+24
 106 006a 1963     		str	r1, [r3, #48]
 236:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 237:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
ARM GAS  /tmp/ccvePDTV.s 			page 7


 107              		.loc 1 237 3 is_stmt 1 view .LVU29
 108              		.loc 1 237 18 is_stmt 0 view .LVU30
 109 006c 5A63     		str	r2, [r3, #52]
 238:Core/Src/system_stm32h7xx.c **** 
 239:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 240:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 110              		.loc 1 240 3 is_stmt 1 view .LVU31
 111              		.loc 1 240 17 is_stmt 0 view .LVU32
 112 006e 9963     		str	r1, [r3, #56]
 241:Core/Src/system_stm32h7xx.c **** 
 242:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 243:Core/Src/system_stm32h7xx.c **** 
 244:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
 113              		.loc 1 244 3 is_stmt 1 view .LVU33
 114              		.loc 1 244 18 is_stmt 0 view .LVU34
 115 0070 DA63     		str	r2, [r3, #60]
 245:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 246:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 116              		.loc 1 246 3 is_stmt 1 view .LVU35
 117              		.loc 1 246 17 is_stmt 0 view .LVU36
 118 0072 1964     		str	r1, [r3, #64]
 247:Core/Src/system_stm32h7xx.c **** 
 248:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 249:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 119              		.loc 1 249 3 is_stmt 1 view .LVU37
 120              		.loc 1 249 18 is_stmt 0 view .LVU38
 121 0074 5A64     		str	r2, [r3, #68]
 250:Core/Src/system_stm32h7xx.c **** 
 251:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 252:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 122              		.loc 1 252 3 is_stmt 1 view .LVU39
 123              		.loc 1 252 11 is_stmt 0 view .LVU40
 124 0076 1968     		ldr	r1, [r3]
 125 0078 21F48021 		bic	r1, r1, #262144
 126 007c 1960     		str	r1, [r3]
 253:Core/Src/system_stm32h7xx.c **** 
 254:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 255:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 127              		.loc 1 255 3 is_stmt 1 view .LVU41
 128              		.loc 1 255 13 is_stmt 0 view .LVU42
 129 007e 1A66     		str	r2, [r3, #96]
 256:Core/Src/system_stm32h7xx.c **** 
 257:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 258:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 259:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 260:Core/Src/system_stm32h7xx.c ****   {
 261:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 262:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 263:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 264:Core/Src/system_stm32h7xx.c ****   }
 265:Core/Src/system_stm32h7xx.c **** #endif /* STM32H7_DEV_ID */
 266:Core/Src/system_stm32h7xx.c **** 
 267:Core/Src/system_stm32h7xx.c **** #if defined(DATA_IN_D2_SRAM)
 268:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM), enable the D2 SRAM clock (AHB SRAM clock) *
 269:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 270:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 271:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
ARM GAS  /tmp/ccvePDTV.s 			page 8


 272:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 273:Core/Src/system_stm32h7xx.c **** #else
 274:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 275:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 276:Core/Src/system_stm32h7xx.c **** 
 277:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 278:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 279:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 280:Core/Src/system_stm32h7xx.c **** 
 281:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 282:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 283:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 284:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 285:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 286:Core/Src/system_stm32h7xx.c **** 
 287:Core/Src/system_stm32h7xx.c **** #else
 288:Core/Src/system_stm32h7xx.c ****   /*
 289:Core/Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 290:Core/Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 291:Core/Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 292:Core/Src/system_stm32h7xx.c ****    */
 293:Core/Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 130              		.loc 1 293 3 is_stmt 1 view .LVU43
 131              		.loc 1 293 24 is_stmt 0 view .LVU44
 132 0080 094B     		ldr	r3, .L4+28
 133 0082 43F2D202 		movw	r2, #12498
 134 0086 1A60     		str	r2, [r3]
 294:Core/Src/system_stm32h7xx.c **** 
 295:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 296:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 297:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 298:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 299:Core/Src/system_stm32h7xx.c **** 
 300:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 301:Core/Src/system_stm32h7xx.c **** }
 135              		.loc 1 301 1 view .LVU45
 136 0088 7047     		bx	lr
 137              	.L5:
 138 008a 00BF     		.align	2
 139              	.L4:
 140 008c 00ED00E0 		.word	-536810240
 141 0090 00200052 		.word	1375739904
 142 0094 00440258 		.word	1476543488
 143 0098 7FEDF6EA 		.word	-352916097
 144 009c 00020202 		.word	33686016
 145 00a0 0000FF01 		.word	33488896
 146 00a4 80020101 		.word	16843392
 147 00a8 00400052 		.word	1375748096
 148              		.cfi_endproc
 149              	.LFE144:
 151              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 152              		.align	1
 153              		.global	SystemCoreClockUpdate
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv5-d16
ARM GAS  /tmp/ccvePDTV.s 			page 9


 159              	SystemCoreClockUpdate:
 160              	.LFB145:
 302:Core/Src/system_stm32h7xx.c **** 
 303:Core/Src/system_stm32h7xx.c **** /**
 304:Core/Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 305:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 306:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 307:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 308:Core/Src/system_stm32h7xx.c ****   *
 309:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 310:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 311:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 312:Core/Src/system_stm32h7xx.c ****   *
 313:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 314:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 315:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 316:Core/Src/system_stm32h7xx.c ****   *
 317:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 318:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 319:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 320:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 321:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 322:Core/Src/system_stm32h7xx.c ****   *
 323:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 324:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 325:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 326:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 327:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 328:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 329:Core/Src/system_stm32h7xx.c ****   *
 330:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 331:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 332:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 333:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 334:Core/Src/system_stm32h7xx.c ****   *
 335:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 336:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 337:Core/Src/system_stm32h7xx.c ****   * @param  None
 338:Core/Src/system_stm32h7xx.c ****   * @retval None
 339:Core/Src/system_stm32h7xx.c ****   */
 340:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 341:Core/Src/system_stm32h7xx.c **** {
 161              		.loc 1 341 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 10B4     		push	{r4}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 4, -4
 342:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 170              		.loc 1 342 3 view .LVU47
 343:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 171              		.loc 1 343 3 view .LVU48
 344:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 172              		.loc 1 344 3 view .LVU49
ARM GAS  /tmp/ccvePDTV.s 			page 10


 345:Core/Src/system_stm32h7xx.c **** 
 346:Core/Src/system_stm32h7xx.c **** 
 347:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 348:Core/Src/system_stm32h7xx.c **** 
 349:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 173              		.loc 1 349 3 view .LVU50
 174              		.loc 1 349 14 is_stmt 0 view .LVU51
 175 0002 7A4B     		ldr	r3, .L20
 176 0004 1B69     		ldr	r3, [r3, #16]
 177              		.loc 1 349 21 view .LVU52
 178 0006 03F03803 		and	r3, r3, #56
 179              		.loc 1 349 3 view .LVU53
 180 000a 182B     		cmp	r3, #24
 181 000c 00F2E580 		bhi	.L7
 182 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 183              	.L9:
 184 0014 1B00     		.2byte	(.L12-.L9)/2
 185 0016 E300     		.2byte	(.L7-.L9)/2
 186 0018 E300     		.2byte	(.L7-.L9)/2
 187 001a E300     		.2byte	(.L7-.L9)/2
 188 001c E300     		.2byte	(.L7-.L9)/2
 189 001e E300     		.2byte	(.L7-.L9)/2
 190 0020 E300     		.2byte	(.L7-.L9)/2
 191 0022 E300     		.2byte	(.L7-.L9)/2
 192 0024 1900     		.2byte	(.L11-.L9)/2
 193 0026 E300     		.2byte	(.L7-.L9)/2
 194 0028 E300     		.2byte	(.L7-.L9)/2
 195 002a E300     		.2byte	(.L7-.L9)/2
 196 002c E300     		.2byte	(.L7-.L9)/2
 197 002e E300     		.2byte	(.L7-.L9)/2
 198 0030 E300     		.2byte	(.L7-.L9)/2
 199 0032 E300     		.2byte	(.L7-.L9)/2
 200 0034 EA00     		.2byte	(.L17-.L9)/2
 201 0036 E300     		.2byte	(.L7-.L9)/2
 202 0038 E300     		.2byte	(.L7-.L9)/2
 203 003a E300     		.2byte	(.L7-.L9)/2
 204 003c E300     		.2byte	(.L7-.L9)/2
 205 003e E300     		.2byte	(.L7-.L9)/2
 206 0040 E300     		.2byte	(.L7-.L9)/2
 207 0042 E300     		.2byte	(.L7-.L9)/2
 208 0044 3700     		.2byte	(.L8-.L9)/2
 209              		.p2align 1
 210              	.L11:
 211 0046 6A4A     		ldr	r2, .L20+4
 212 0048 05E0     		b	.L10
 213              	.L12:
 350:Core/Src/system_stm32h7xx.c ****   {
 351:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 352:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 214              		.loc 1 352 5 is_stmt 1 view .LVU54
 215              		.loc 1 352 57 is_stmt 0 view .LVU55
 216 004a 684B     		ldr	r3, .L20
 217 004c 1B68     		ldr	r3, [r3]
 218              		.loc 1 352 78 view .LVU56
 219 004e C3F3C103 		ubfx	r3, r3, #3, #2
 220              		.loc 1 352 25 view .LVU57
 221 0052 684A     		ldr	r2, .L20+8
ARM GAS  /tmp/ccvePDTV.s 			page 11


 222 0054 DA40     		lsrs	r2, r2, r3
 223              	.LVL0:
 353:Core/Src/system_stm32h7xx.c ****     break;
 224              		.loc 1 353 5 is_stmt 1 view .LVU58
 225              	.L10:
 354:Core/Src/system_stm32h7xx.c **** 
 355:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 356:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 357:Core/Src/system_stm32h7xx.c ****     break;
 358:Core/Src/system_stm32h7xx.c **** 
 359:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 360:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 361:Core/Src/system_stm32h7xx.c ****     break;
 362:Core/Src/system_stm32h7xx.c **** 
 363:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 364:Core/Src/system_stm32h7xx.c **** 
 365:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 366:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 367:Core/Src/system_stm32h7xx.c ****     */
 368:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 369:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 370:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 371:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 372:Core/Src/system_stm32h7xx.c **** 
 373:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 374:Core/Src/system_stm32h7xx.c ****     {
 375:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 376:Core/Src/system_stm32h7xx.c ****       {
 377:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 378:Core/Src/system_stm32h7xx.c **** 
 379:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 380:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 381:Core/Src/system_stm32h7xx.c **** 
 382:Core/Src/system_stm32h7xx.c ****         break;
 383:Core/Src/system_stm32h7xx.c **** 
 384:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 385:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 386:Core/Src/system_stm32h7xx.c ****         break;
 387:Core/Src/system_stm32h7xx.c **** 
 388:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 389:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 390:Core/Src/system_stm32h7xx.c ****         break;
 391:Core/Src/system_stm32h7xx.c **** 
 392:Core/Src/system_stm32h7xx.c ****       default:
 393:Core/Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 394:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 395:Core/Src/system_stm32h7xx.c ****         break;
 396:Core/Src/system_stm32h7xx.c ****       }
 397:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 398:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 399:Core/Src/system_stm32h7xx.c ****     }
 400:Core/Src/system_stm32h7xx.c ****     else
 401:Core/Src/system_stm32h7xx.c ****     {
 402:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 403:Core/Src/system_stm32h7xx.c ****     }
 404:Core/Src/system_stm32h7xx.c ****     break;
 405:Core/Src/system_stm32h7xx.c **** 
ARM GAS  /tmp/ccvePDTV.s 			page 12


 406:Core/Src/system_stm32h7xx.c ****   default:
 407:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 408:Core/Src/system_stm32h7xx.c ****     break;
 409:Core/Src/system_stm32h7xx.c ****   }
 410:Core/Src/system_stm32h7xx.c **** 
 411:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 412:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 413:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 226              		.loc 1 413 3 view .LVU59
 227              		.loc 1 413 30 is_stmt 0 view .LVU60
 228 0056 6548     		ldr	r0, .L20
 229 0058 8369     		ldr	r3, [r0, #24]
 230              		.loc 1 413 59 view .LVU61
 231 005a C3F30323 		ubfx	r3, r3, #8, #4
 232              		.loc 1 413 25 view .LVU62
 233 005e 6649     		ldr	r1, .L20+12
 234 0060 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 235              	.LVL1:
 414:Core/Src/system_stm32h7xx.c **** 
 415:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 416:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 236              		.loc 1 416 3 is_stmt 1 view .LVU63
 237              		.loc 1 416 23 is_stmt 0 view .LVU64
 238 0062 DA40     		lsrs	r2, r2, r3
 239              	.LVL2:
 417:Core/Src/system_stm32h7xx.c **** 
 418:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 419:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 240              		.loc 1 419 3 is_stmt 1 view .LVU65
 241              		.loc 1 419 66 is_stmt 0 view .LVU66
 242 0064 8369     		ldr	r3, [r0, #24]
 243              	.LVL3:
 244              		.loc 1 419 93 view .LVU67
 245 0066 03F00F03 		and	r3, r3, #15
 246              		.loc 1 419 61 view .LVU68
 247 006a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 248              		.loc 1 419 118 view .LVU69
 249 006c 03F01F03 		and	r3, r3, #31
 250              		.loc 1 419 40 view .LVU70
 251 0070 22FA03F3 		lsr	r3, r2, r3
 252              		.loc 1 419 17 view .LVU71
 253 0074 6149     		ldr	r1, .L20+16
 254              		.loc 1 419 17 view .LVU72
 255 0076 0B60     		str	r3, [r1]
 420:Core/Src/system_stm32h7xx.c **** 
 421:Core/Src/system_stm32h7xx.c **** #else
 422:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 423:Core/Src/system_stm32h7xx.c **** 
 424:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 425:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 426:Core/Src/system_stm32h7xx.c **** 
 427:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 428:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 429:Core/Src/system_stm32h7xx.c **** 
 430:Core/Src/system_stm32h7xx.c **** #endif
 431:Core/Src/system_stm32h7xx.c **** 
 432:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
ARM GAS  /tmp/ccvePDTV.s 			page 13


 433:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 434:Core/Src/system_stm32h7xx.c **** #else
 435:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 256              		.loc 1 435 3 is_stmt 1 view .LVU73
 257              		.loc 1 435 19 is_stmt 0 view .LVU74
 258 0078 614B     		ldr	r3, .L20+20
 259 007a 1A60     		str	r2, [r3]
 436:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 437:Core/Src/system_stm32h7xx.c **** }
 260              		.loc 1 437 1 view .LVU75
 261 007c 5DF8044B 		ldr	r4, [sp], #4
 262              	.LCFI1:
 263              		.cfi_remember_state
 264              		.cfi_restore 4
 265              		.cfi_def_cfa_offset 0
 266 0080 7047     		bx	lr
 267              	.LVL4:
 268              	.L8:
 269              	.LCFI2:
 270              		.cfi_restore_state
 368:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 271              		.loc 1 368 5 is_stmt 1 view .LVU76
 368:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 272              		.loc 1 368 21 is_stmt 0 view .LVU77
 273 0082 5A49     		ldr	r1, .L20
 274 0084 886A     		ldr	r0, [r1, #40]
 368:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 275              		.loc 1 368 15 view .LVU78
 276 0086 00F00300 		and	r0, r0, #3
 277              	.LVL5:
 369:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 278              		.loc 1 369 5 is_stmt 1 view .LVU79
 369:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 279              		.loc 1 369 17 is_stmt 0 view .LVU80
 280 008a 8C6A     		ldr	r4, [r1, #40]
 369:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 281              		.loc 1 369 10 view .LVU81
 282 008c C4F30512 		ubfx	r2, r4, #4, #6
 283              	.LVL6:
 370:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 284              		.loc 1 370 5 is_stmt 1 view .LVU82
 370:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 285              		.loc 1 370 22 is_stmt 0 view .LVU83
 286 0090 CB6A     		ldr	r3, [r1, #44]
 370:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 287              		.loc 1 370 15 view .LVU84
 288 0092 03F0010C 		and	ip, r3, #1
 289              	.LVL7:
 371:Core/Src/system_stm32h7xx.c **** 
 290              		.loc 1 371 5 is_stmt 1 view .LVU85
 371:Core/Src/system_stm32h7xx.c **** 
 291              		.loc 1 371 50 is_stmt 0 view .LVU86
 292 0096 4B6B     		ldr	r3, [r1, #52]
 371:Core/Src/system_stm32h7xx.c **** 
 293              		.loc 1 371 85 view .LVU87
 294 0098 C3F3CC03 		ubfx	r3, r3, #3, #13
 371:Core/Src/system_stm32h7xx.c **** 
ARM GAS  /tmp/ccvePDTV.s 			page 14


 295              		.loc 1 371 23 view .LVU88
 296 009c 0CFB03F3 		mul	r3, ip, r3
 371:Core/Src/system_stm32h7xx.c **** 
 297              		.loc 1 371 12 view .LVU89
 298 00a0 07EE903A 		vmov	s15, r3	@ int
 299 00a4 F8EE677A 		vcvt.f32.u32	s15, s15
 300              	.LVL8:
 373:Core/Src/system_stm32h7xx.c ****     {
 301              		.loc 1 373 5 is_stmt 1 view .LVU90
 373:Core/Src/system_stm32h7xx.c ****     {
 302              		.loc 1 373 8 is_stmt 0 view .LVU91
 303 00a8 14F47C7F 		tst	r4, #1008
 304 00ac D3D0     		beq	.L10
 375:Core/Src/system_stm32h7xx.c ****       {
 305              		.loc 1 375 7 is_stmt 1 view .LVU92
 306 00ae 0128     		cmp	r0, #1
 307 00b0 59D0     		beq	.L13
 308 00b2 0228     		cmp	r0, #2
 309 00b4 74D0     		beq	.L14
 310 00b6 18B3     		cbz	r0, .L19
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 311              		.loc 1 393 11 view .LVU93
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 312              		.loc 1 393 41 is_stmt 0 view .LVU94
 313 00b8 4C48     		ldr	r0, .L20
 314              	.LVL9:
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 315              		.loc 1 393 41 view .LVU95
 316 00ba 0168     		ldr	r1, [r0]
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 317              		.loc 1 393 62 view .LVU96
 318 00bc C1F3C101 		ubfx	r1, r1, #3, #2
 393:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 319              		.loc 1 393 20 view .LVU97
 320 00c0 4C4B     		ldr	r3, .L20+8
 321 00c2 CB40     		lsrs	r3, r3, r1
 322              	.LVL10:
 394:Core/Src/system_stm32h7xx.c ****         break;
 323              		.loc 1 394 11 is_stmt 1 view .LVU98
 394:Core/Src/system_stm32h7xx.c ****         break;
 324              		.loc 1 394 21 is_stmt 0 view .LVU99
 325 00c4 07EE103A 		vmov	s14, r3	@ int
 326 00c8 F8EE476A 		vcvt.f32.u32	s13, s14
 394:Core/Src/system_stm32h7xx.c ****         break;
 327              		.loc 1 394 41 view .LVU100
 328 00cc 07EE102A 		vmov	s14, r2	@ int
 329 00d0 B8EE476A 		vcvt.f32.u32	s12, s14
 394:Core/Src/system_stm32h7xx.c ****         break;
 330              		.loc 1 394 39 view .LVU101
 331 00d4 86EE867A 		vdiv.f32	s14, s13, s12
 394:Core/Src/system_stm32h7xx.c ****         break;
 332              		.loc 1 394 82 view .LVU102
 333 00d8 036B     		ldr	r3, [r0, #48]
 334              	.LVL11:
 394:Core/Src/system_stm32h7xx.c ****         break;
 335              		.loc 1 394 68 view .LVU103
 336 00da C3F30803 		ubfx	r3, r3, #0, #9
ARM GAS  /tmp/ccvePDTV.s 			page 15


 394:Core/Src/system_stm32h7xx.c ****         break;
 337              		.loc 1 394 59 view .LVU104
 338 00de 06EE903A 		vmov	s13, r3	@ int
 339 00e2 F8EE666A 		vcvt.f32.u32	s13, s13
 394:Core/Src/system_stm32h7xx.c ****         break;
 340              		.loc 1 394 121 view .LVU105
 341 00e6 9FED476A 		vldr.32	s12, .L20+24
 342 00ea 67EE867A 		vmul.f32	s15, s15, s12
 343              	.LVL12:
 394:Core/Src/system_stm32h7xx.c ****         break;
 344              		.loc 1 394 112 view .LVU106
 345 00ee 76EEA77A 		vadd.f32	s15, s13, s15
 394:Core/Src/system_stm32h7xx.c ****         break;
 346              		.loc 1 394 139 view .LVU107
 347 00f2 F7EE006A 		vmov.f32	s13, #1.0e+0
 348 00f6 77EEA67A 		vadd.f32	s15, s15, s13
 394:Core/Src/system_stm32h7xx.c ****         break;
 349              		.loc 1 394 18 view .LVU108
 350 00fa 27EE277A 		vmul.f32	s14, s14, s15
 351              	.LVL13:
 395:Core/Src/system_stm32h7xx.c ****       }
 352              		.loc 1 395 9 is_stmt 1 view .LVU109
 353 00fe 22E0     		b	.L16
 354              	.LVL14:
 355              	.L19:
 379:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 356              		.loc 1 379 9 view .LVU110
 379:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 357              		.loc 1 379 39 is_stmt 0 view .LVU111
 358 0100 0846     		mov	r0, r1
 359              	.LVL15:
 379:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 360              		.loc 1 379 39 view .LVU112
 361 0102 0968     		ldr	r1, [r1]
 379:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 362              		.loc 1 379 60 view .LVU113
 363 0104 C1F3C101 		ubfx	r1, r1, #3, #2
 379:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 364              		.loc 1 379 18 view .LVU114
 365 0108 3A4B     		ldr	r3, .L20+8
 366 010a CB40     		lsrs	r3, r3, r1
 367              	.LVL16:
 380:Core/Src/system_stm32h7xx.c **** 
 368              		.loc 1 380 9 is_stmt 1 view .LVU115
 380:Core/Src/system_stm32h7xx.c **** 
 369              		.loc 1 380 20 is_stmt 0 view .LVU116
 370 010c 07EE103A 		vmov	s14, r3	@ int
 371 0110 F8EE476A 		vcvt.f32.u32	s13, s14
 380:Core/Src/system_stm32h7xx.c **** 
 372              		.loc 1 380 40 view .LVU117
 373 0114 07EE102A 		vmov	s14, r2	@ int
 374 0118 B8EE476A 		vcvt.f32.u32	s12, s14
 380:Core/Src/system_stm32h7xx.c **** 
 375              		.loc 1 380 38 view .LVU118
 376 011c 86EE867A 		vdiv.f32	s14, s13, s12
 380:Core/Src/system_stm32h7xx.c **** 
 377              		.loc 1 380 81 view .LVU119
ARM GAS  /tmp/ccvePDTV.s 			page 16


 378 0120 036B     		ldr	r3, [r0, #48]
 379              	.LVL17:
 380:Core/Src/system_stm32h7xx.c **** 
 380              		.loc 1 380 67 view .LVU120
 381 0122 C3F30803 		ubfx	r3, r3, #0, #9
 380:Core/Src/system_stm32h7xx.c **** 
 382              		.loc 1 380 58 view .LVU121
 383 0126 06EE903A 		vmov	s13, r3	@ int
 384 012a F8EE666A 		vcvt.f32.u32	s13, s13
 380:Core/Src/system_stm32h7xx.c **** 
 385              		.loc 1 380 120 view .LVU122
 386 012e 9FED356A 		vldr.32	s12, .L20+24
 387 0132 67EE867A 		vmul.f32	s15, s15, s12
 388              	.LVL18:
 380:Core/Src/system_stm32h7xx.c **** 
 389              		.loc 1 380 111 view .LVU123
 390 0136 76EEA77A 		vadd.f32	s15, s13, s15
 380:Core/Src/system_stm32h7xx.c **** 
 391              		.loc 1 380 138 view .LVU124
 392 013a F7EE006A 		vmov.f32	s13, #1.0e+0
 393 013e 77EEA67A 		vadd.f32	s15, s15, s13
 380:Core/Src/system_stm32h7xx.c **** 
 394              		.loc 1 380 16 view .LVU125
 395 0142 27EE277A 		vmul.f32	s14, s14, s15
 396              	.LVL19:
 382:Core/Src/system_stm32h7xx.c **** 
 397              		.loc 1 382 9 is_stmt 1 view .LVU126
 398              	.L16:
 397:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 399              		.loc 1 397 7 view .LVU127
 397:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 400              		.loc 1 397 20 is_stmt 0 view .LVU128
 401 0146 294B     		ldr	r3, .L20
 402 0148 1B6B     		ldr	r3, [r3, #48]
 397:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 403              		.loc 1 397 50 view .LVU129
 404 014a C3F34623 		ubfx	r3, r3, #9, #7
 397:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 405              		.loc 1 397 12 view .LVU130
 406 014e 0133     		adds	r3, r3, #1
 407              	.LVL20:
 398:Core/Src/system_stm32h7xx.c ****     }
 408              		.loc 1 398 7 is_stmt 1 view .LVU131
 398:Core/Src/system_stm32h7xx.c ****     }
 409              		.loc 1 398 57 is_stmt 0 view .LVU132
 410 0150 07EE903A 		vmov	s15, r3	@ int
 411 0154 F8EE677A 		vcvt.f32.u32	s15, s15
 398:Core/Src/system_stm32h7xx.c ****     }
 412              		.loc 1 398 40 view .LVU133
 413 0158 C7EE276A 		vdiv.f32	s13, s14, s15
 398:Core/Src/system_stm32h7xx.c ****     }
 414              		.loc 1 398 27 view .LVU134
 415 015c FCEEE67A 		vcvt.u32.f32	s15, s13
 416 0160 17EE902A 		vmov	r2, s15	@ int
 417              	.LVL21:
 398:Core/Src/system_stm32h7xx.c ****     }
 418              		.loc 1 398 27 view .LVU135
ARM GAS  /tmp/ccvePDTV.s 			page 17


 419 0164 77E7     		b	.L10
 420              	.LVL22:
 421              	.L13:
 385:Core/Src/system_stm32h7xx.c ****         break;
 422              		.loc 1 385 11 is_stmt 1 view .LVU136
 385:Core/Src/system_stm32h7xx.c ****         break;
 423              		.loc 1 385 42 is_stmt 0 view .LVU137
 424 0166 07EE102A 		vmov	s14, r2	@ int
 425 016a F8EE476A 		vcvt.f32.u32	s13, s14
 385:Core/Src/system_stm32h7xx.c ****         break;
 426              		.loc 1 385 40 view .LVU138
 427 016e 9FED266A 		vldr.32	s12, .L20+28
 428 0172 86EE267A 		vdiv.f32	s14, s12, s13
 385:Core/Src/system_stm32h7xx.c ****         break;
 429              		.loc 1 385 83 view .LVU139
 430 0176 1D4B     		ldr	r3, .L20
 431 0178 1B6B     		ldr	r3, [r3, #48]
 385:Core/Src/system_stm32h7xx.c ****         break;
 432              		.loc 1 385 69 view .LVU140
 433 017a C3F30803 		ubfx	r3, r3, #0, #9
 385:Core/Src/system_stm32h7xx.c ****         break;
 434              		.loc 1 385 60 view .LVU141
 435 017e 06EE903A 		vmov	s13, r3	@ int
 436 0182 F8EE666A 		vcvt.f32.u32	s13, s13
 385:Core/Src/system_stm32h7xx.c ****         break;
 437              		.loc 1 385 122 view .LVU142
 438 0186 9FED1F6A 		vldr.32	s12, .L20+24
 439 018a 67EE867A 		vmul.f32	s15, s15, s12
 440              	.LVL23:
 385:Core/Src/system_stm32h7xx.c ****         break;
 441              		.loc 1 385 113 view .LVU143
 442 018e 76EEA77A 		vadd.f32	s15, s13, s15
 385:Core/Src/system_stm32h7xx.c ****         break;
 443              		.loc 1 385 140 view .LVU144
 444 0192 F7EE006A 		vmov.f32	s13, #1.0e+0
 445 0196 77EEA67A 		vadd.f32	s15, s15, s13
 385:Core/Src/system_stm32h7xx.c ****         break;
 446              		.loc 1 385 18 view .LVU145
 447 019a 27EE277A 		vmul.f32	s14, s14, s15
 448              	.LVL24:
 386:Core/Src/system_stm32h7xx.c **** 
 449              		.loc 1 386 9 is_stmt 1 view .LVU146
 450 019e D2E7     		b	.L16
 451              	.LVL25:
 452              	.L14:
 389:Core/Src/system_stm32h7xx.c ****         break;
 453              		.loc 1 389 11 view .LVU147
 389:Core/Src/system_stm32h7xx.c ****         break;
 454              		.loc 1 389 42 is_stmt 0 view .LVU148
 455 01a0 07EE102A 		vmov	s14, r2	@ int
 456 01a4 F8EE476A 		vcvt.f32.u32	s13, s14
 389:Core/Src/system_stm32h7xx.c ****         break;
 457              		.loc 1 389 40 view .LVU149
 458 01a8 9FED186A 		vldr.32	s12, .L20+32
 459 01ac 86EE267A 		vdiv.f32	s14, s12, s13
 389:Core/Src/system_stm32h7xx.c ****         break;
 460              		.loc 1 389 83 view .LVU150
ARM GAS  /tmp/ccvePDTV.s 			page 18


 461 01b0 0E4B     		ldr	r3, .L20
 462 01b2 1B6B     		ldr	r3, [r3, #48]
 389:Core/Src/system_stm32h7xx.c ****         break;
 463              		.loc 1 389 69 view .LVU151
 464 01b4 C3F30803 		ubfx	r3, r3, #0, #9
 389:Core/Src/system_stm32h7xx.c ****         break;
 465              		.loc 1 389 60 view .LVU152
 466 01b8 06EE903A 		vmov	s13, r3	@ int
 467 01bc F8EE666A 		vcvt.f32.u32	s13, s13
 389:Core/Src/system_stm32h7xx.c ****         break;
 468              		.loc 1 389 122 view .LVU153
 469 01c0 9FED106A 		vldr.32	s12, .L20+24
 470 01c4 67EE867A 		vmul.f32	s15, s15, s12
 471              	.LVL26:
 389:Core/Src/system_stm32h7xx.c ****         break;
 472              		.loc 1 389 113 view .LVU154
 473 01c8 76EEA77A 		vadd.f32	s15, s13, s15
 389:Core/Src/system_stm32h7xx.c ****         break;
 474              		.loc 1 389 140 view .LVU155
 475 01cc F7EE006A 		vmov.f32	s13, #1.0e+0
 476 01d0 77EEA67A 		vadd.f32	s15, s15, s13
 389:Core/Src/system_stm32h7xx.c ****         break;
 477              		.loc 1 389 18 view .LVU156
 478 01d4 27EE277A 		vmul.f32	s14, s14, s15
 479              	.LVL27:
 390:Core/Src/system_stm32h7xx.c **** 
 480              		.loc 1 390 9 is_stmt 1 view .LVU157
 481 01d8 B5E7     		b	.L16
 482              	.LVL28:
 483              	.L7:
 407:Core/Src/system_stm32h7xx.c ****     break;
 484              		.loc 1 407 5 view .LVU158
 407:Core/Src/system_stm32h7xx.c ****     break;
 485              		.loc 1 407 57 is_stmt 0 view .LVU159
 486 01da 044B     		ldr	r3, .L20
 487 01dc 1B68     		ldr	r3, [r3]
 407:Core/Src/system_stm32h7xx.c ****     break;
 488              		.loc 1 407 78 view .LVU160
 489 01de C3F3C103 		ubfx	r3, r3, #3, #2
 407:Core/Src/system_stm32h7xx.c ****     break;
 490              		.loc 1 407 25 view .LVU161
 491 01e2 044A     		ldr	r2, .L20+8
 492 01e4 DA40     		lsrs	r2, r2, r3
 493              	.LVL29:
 408:Core/Src/system_stm32h7xx.c ****   }
 494              		.loc 1 408 5 is_stmt 1 view .LVU162
 495 01e6 36E7     		b	.L10
 496              	.LVL30:
 497              	.L17:
 360:Core/Src/system_stm32h7xx.c ****     break;
 498              		.loc 1 360 25 is_stmt 0 view .LVU163
 499 01e8 094A     		ldr	r2, .L20+36
 500 01ea 34E7     		b	.L10
 501              	.L21:
 502              		.align	2
 503              	.L20:
 504 01ec 00440258 		.word	1476543488
ARM GAS  /tmp/ccvePDTV.s 			page 19


 505 01f0 00093D00 		.word	4000000
 506 01f4 0090D003 		.word	64000000
 507 01f8 00000000 		.word	.LANCHOR0
 508 01fc 00000000 		.word	.LANCHOR1
 509 0200 00000000 		.word	.LANCHOR2
 510 0204 00000039 		.word	956301312
 511 0208 0024744A 		.word	1249125376
 512 020c 20BCBE4B 		.word	1270791200
 513 0210 40787D01 		.word	25000000
 514              		.cfi_endproc
 515              	.LFE145:
 517              		.global	D1CorePrescTable
 518              		.global	SystemD2Clock
 519              		.global	SystemCoreClock
 520              		.section	.data.SystemCoreClock,"aw"
 521              		.align	2
 522              		.set	.LANCHOR2,. + 0
 525              	SystemCoreClock:
 526 0000 0090D003 		.word	64000000
 527              		.section	.data.SystemD2Clock,"aw"
 528              		.align	2
 529              		.set	.LANCHOR1,. + 0
 532              	SystemD2Clock:
 533 0000 0090D003 		.word	64000000
 534              		.section	.rodata.D1CorePrescTable,"a"
 535              		.align	2
 536              		.set	.LANCHOR0,. + 0
 539              	D1CorePrescTable:
 540 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 540      01020304 
 540      01020304 
 540      06
 541 000d 070809   		.ascii	"\007\010\011"
 542              		.text
 543              	.Letext0:
 544              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 545              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 546              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 547              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h733xx.h"
 548              		.file 6 "/usr/include/newlib/math.h"
ARM GAS  /tmp/ccvePDTV.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32h7xx.c
     /tmp/ccvePDTV.s:17     .text.SystemInit:0000000000000000 $t
     /tmp/ccvePDTV.s:25     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccvePDTV.s:140    .text.SystemInit:000000000000008c $d
     /tmp/ccvePDTV.s:152    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccvePDTV.s:159    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccvePDTV.s:184    .text.SystemCoreClockUpdate:0000000000000014 $d
     /tmp/ccvePDTV.s:209    .text.SystemCoreClockUpdate:0000000000000046 $t
     /tmp/ccvePDTV.s:504    .text.SystemCoreClockUpdate:00000000000001ec $d
     /tmp/ccvePDTV.s:539    .rodata.D1CorePrescTable:0000000000000000 D1CorePrescTable
     /tmp/ccvePDTV.s:532    .data.SystemD2Clock:0000000000000000 SystemD2Clock
     /tmp/ccvePDTV.s:525    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccvePDTV.s:521    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccvePDTV.s:528    .data.SystemD2Clock:0000000000000000 $d
     /tmp/ccvePDTV.s:535    .rodata.D1CorePrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
